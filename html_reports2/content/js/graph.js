/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 39.0, "minX": 0.0, "maxY": 31583.0, "series": [{"data": [[0.0, 208.0], [0.1, 260.0], [0.2, 269.0], [0.3, 282.0], [0.4, 308.0], [0.5, 325.0], [0.6, 356.0], [0.7, 412.0], [0.8, 422.0], [0.9, 468.0], [1.0, 500.0], [1.1, 532.0], [1.2, 549.0], [1.3, 566.0], [1.4, 596.0], [1.5, 614.0], [1.6, 621.0], [1.7, 662.0], [1.8, 706.0], [1.9, 766.0], [2.0, 788.0], [2.1, 802.0], [2.2, 811.0], [2.3, 821.0], [2.4, 843.0], [2.5, 848.0], [2.6, 861.0], [2.7, 864.0], [2.8, 871.0], [2.9, 878.0], [3.0, 890.0], [3.1, 895.0], [3.2, 906.0], [3.3, 916.0], [3.4, 925.0], [3.5, 933.0], [3.6, 945.0], [3.7, 981.0], [3.8, 985.0], [3.9, 993.0], [4.0, 1001.0], [4.1, 1017.0], [4.2, 1025.0], [4.3, 1035.0], [4.4, 1049.0], [4.5, 1084.0], [4.6, 1095.0], [4.7, 1148.0], [4.8, 1199.0], [4.9, 1209.0], [5.0, 1260.0], [5.1, 1315.0], [5.2, 1326.0], [5.3, 1329.0], [5.4, 1356.0], [5.5, 1359.0], [5.6, 1390.0], [5.7, 1411.0], [5.8, 1419.0], [5.9, 1429.0], [6.0, 1446.0], [6.1, 1460.0], [6.2, 1483.0], [6.3, 1496.0], [6.4, 1511.0], [6.5, 1531.0], [6.6, 1535.0], [6.7, 1552.0], [6.8, 1565.0], [6.9, 1579.0], [7.0, 1585.0], [7.1, 1593.0], [7.2, 1602.0], [7.3, 1606.0], [7.4, 1625.0], [7.5, 1629.0], [7.6, 1640.0], [7.7, 1656.0], [7.8, 1660.0], [7.9, 1688.0], [8.0, 1718.0], [8.1, 1733.0], [8.2, 1745.0], [8.3, 1753.0], [8.4, 1760.0], [8.5, 1788.0], [8.6, 1797.0], [8.7, 1806.0], [8.8, 1817.0], [8.9, 1822.0], [9.0, 1826.0], [9.1, 1830.0], [9.2, 1837.0], [9.3, 1859.0], [9.4, 1883.0], [9.5, 1892.0], [9.6, 1927.0], [9.7, 1946.0], [9.8, 1966.0], [9.9, 2025.0], [10.0, 2047.0], [10.1, 2056.0], [10.2, 2096.0], [10.3, 2117.0], [10.4, 2122.0], [10.5, 2125.0], [10.6, 2132.0], [10.7, 2141.0], [10.8, 2154.0], [10.9, 2160.0], [11.0, 2164.0], [11.1, 2170.0], [11.2, 2178.0], [11.3, 2182.0], [11.4, 2186.0], [11.5, 2188.0], [11.6, 2192.0], [11.7, 2197.0], [11.8, 2211.0], [11.9, 2213.0], [12.0, 2216.0], [12.1, 2233.0], [12.2, 2249.0], [12.3, 2261.0], [12.4, 2266.0], [12.5, 2277.0], [12.6, 2287.0], [12.7, 2308.0], [12.8, 2310.0], [12.9, 2318.0], [13.0, 2331.0], [13.1, 2338.0], [13.2, 2345.0], [13.3, 2358.0], [13.4, 2364.0], [13.5, 2370.0], [13.6, 2378.0], [13.7, 2388.0], [13.8, 2399.0], [13.9, 2402.0], [14.0, 2410.0], [14.1, 2412.0], [14.2, 2415.0], [14.3, 2421.0], [14.4, 2424.0], [14.5, 2430.0], [14.6, 2440.0], [14.7, 2446.0], [14.8, 2451.0], [14.9, 2461.0], [15.0, 2466.0], [15.1, 2471.0], [15.2, 2480.0], [15.3, 2484.0], [15.4, 2489.0], [15.5, 2491.0], [15.6, 2495.0], [15.7, 2509.0], [15.8, 2512.0], [15.9, 2518.0], [16.0, 2529.0], [16.1, 2532.0], [16.2, 2548.0], [16.3, 2553.0], [16.4, 2557.0], [16.5, 2563.0], [16.6, 2571.0], [16.7, 2577.0], [16.8, 2587.0], [16.9, 2599.0], [17.0, 2617.0], [17.1, 2625.0], [17.2, 2641.0], [17.3, 2649.0], [17.4, 2658.0], [17.5, 2671.0], [17.6, 2686.0], [17.7, 2704.0], [17.8, 2709.0], [17.9, 2725.0], [18.0, 2750.0], [18.1, 2756.0], [18.2, 2771.0], [18.3, 2782.0], [18.4, 2812.0], [18.5, 2840.0], [18.6, 2875.0], [18.7, 2879.0], [18.8, 2890.0], [18.9, 2892.0], [19.0, 2914.0], [19.1, 2927.0], [19.2, 2941.0], [19.3, 2945.0], [19.4, 2953.0], [19.5, 2960.0], [19.6, 2968.0], [19.7, 2975.0], [19.8, 2982.0], [19.9, 2993.0], [20.0, 3009.0], [20.1, 3014.0], [20.2, 3021.0], [20.3, 3026.0], [20.4, 3035.0], [20.5, 3040.0], [20.6, 3042.0], [20.7, 3049.0], [20.8, 3057.0], [20.9, 3060.0], [21.0, 3066.0], [21.1, 3069.0], [21.2, 3073.0], [21.3, 3078.0], [21.4, 3083.0], [21.5, 3086.0], [21.6, 3090.0], [21.7, 3091.0], [21.8, 3099.0], [21.9, 3102.0], [22.0, 3104.0], [22.1, 3107.0], [22.2, 3110.0], [22.3, 3116.0], [22.4, 3118.0], [22.5, 3120.0], [22.6, 3125.0], [22.7, 3127.0], [22.8, 3131.0], [22.9, 3134.0], [23.0, 3136.0], [23.1, 3140.0], [23.2, 3145.0], [23.3, 3146.0], [23.4, 3149.0], [23.5, 3150.0], [23.6, 3157.0], [23.7, 3160.0], [23.8, 3162.0], [23.9, 3165.0], [24.0, 3168.0], [24.1, 3173.0], [24.2, 3174.0], [24.3, 3178.0], [24.4, 3187.0], [24.5, 3190.0], [24.6, 3194.0], [24.7, 3197.0], [24.8, 3200.0], [24.9, 3205.0], [25.0, 3207.0], [25.1, 3212.0], [25.2, 3215.0], [25.3, 3217.0], [25.4, 3219.0], [25.5, 3221.0], [25.6, 3222.0], [25.7, 3225.0], [25.8, 3226.0], [25.9, 3227.0], [26.0, 3229.0], [26.1, 3232.0], [26.2, 3235.0], [26.3, 3238.0], [26.4, 3239.0], [26.5, 3241.0], [26.6, 3245.0], [26.7, 3248.0], [26.8, 3254.0], [26.9, 3257.0], [27.0, 3260.0], [27.1, 3262.0], [27.2, 3264.0], [27.3, 3266.0], [27.4, 3270.0], [27.5, 3274.0], [27.6, 3275.0], [27.7, 3276.0], [27.8, 3280.0], [27.9, 3283.0], [28.0, 3286.0], [28.1, 3288.0], [28.2, 3289.0], [28.3, 3290.0], [28.4, 3292.0], [28.5, 3295.0], [28.6, 3296.0], [28.7, 3298.0], [28.8, 3301.0], [28.9, 3303.0], [29.0, 3306.0], [29.1, 3307.0], [29.2, 3311.0], [29.3, 3315.0], [29.4, 3316.0], [29.5, 3319.0], [29.6, 3324.0], [29.7, 3327.0], [29.8, 3329.0], [29.9, 3332.0], [30.0, 3333.0], [30.1, 3339.0], [30.2, 3340.0], [30.3, 3342.0], [30.4, 3344.0], [30.5, 3347.0], [30.6, 3349.0], [30.7, 3352.0], [30.8, 3355.0], [30.9, 3360.0], [31.0, 3363.0], [31.1, 3365.0], [31.2, 3365.0], [31.3, 3367.0], [31.4, 3370.0], [31.5, 3371.0], [31.6, 3372.0], [31.7, 3376.0], [31.8, 3380.0], [31.9, 3383.0], [32.0, 3385.0], [32.1, 3385.0], [32.2, 3389.0], [32.3, 3391.0], [32.4, 3392.0], [32.5, 3394.0], [32.6, 3395.0], [32.7, 3398.0], [32.8, 3400.0], [32.9, 3401.0], [33.0, 3403.0], [33.1, 3406.0], [33.2, 3409.0], [33.3, 3410.0], [33.4, 3411.0], [33.5, 3413.0], [33.6, 3414.0], [33.7, 3418.0], [33.8, 3421.0], [33.9, 3424.0], [34.0, 3427.0], [34.1, 3429.0], [34.2, 3434.0], [34.3, 3435.0], [34.4, 3438.0], [34.5, 3440.0], [34.6, 3444.0], [34.7, 3446.0], [34.8, 3448.0], [34.9, 3450.0], [35.0, 3452.0], [35.1, 3452.0], [35.2, 3456.0], [35.3, 3465.0], [35.4, 3466.0], [35.5, 3468.0], [35.6, 3468.0], [35.7, 3470.0], [35.8, 3473.0], [35.9, 3475.0], [36.0, 3476.0], [36.1, 3478.0], [36.2, 3480.0], [36.3, 3482.0], [36.4, 3487.0], [36.5, 3488.0], [36.6, 3490.0], [36.7, 3491.0], [36.8, 3495.0], [36.9, 3498.0], [37.0, 3498.0], [37.1, 3500.0], [37.2, 3502.0], [37.3, 3505.0], [37.4, 3507.0], [37.5, 3510.0], [37.6, 3512.0], [37.7, 3513.0], [37.8, 3516.0], [37.9, 3519.0], [38.0, 3522.0], [38.1, 3523.0], [38.2, 3523.0], [38.3, 3528.0], [38.4, 3529.0], [38.5, 3531.0], [38.6, 3532.0], [38.7, 3536.0], [38.8, 3537.0], [38.9, 3538.0], [39.0, 3540.0], [39.1, 3543.0], [39.2, 3543.0], [39.3, 3547.0], [39.4, 3549.0], [39.5, 3550.0], [39.6, 3553.0], [39.7, 3556.0], [39.8, 3557.0], [39.9, 3559.0], [40.0, 3560.0], [40.1, 3562.0], [40.2, 3565.0], [40.3, 3566.0], [40.4, 3567.0], [40.5, 3568.0], [40.6, 3570.0], [40.7, 3574.0], [40.8, 3574.0], [40.9, 3578.0], [41.0, 3581.0], [41.1, 3581.0], [41.2, 3584.0], [41.3, 3587.0], [41.4, 3590.0], [41.5, 3595.0], [41.6, 3598.0], [41.7, 3600.0], [41.8, 3602.0], [41.9, 3604.0], [42.0, 3606.0], [42.1, 3608.0], [42.2, 3610.0], [42.3, 3613.0], [42.4, 3615.0], [42.5, 3618.0], [42.6, 3618.0], [42.7, 3619.0], [42.8, 3623.0], [42.9, 3625.0], [43.0, 3626.0], [43.1, 3628.0], [43.2, 3631.0], [43.3, 3633.0], [43.4, 3634.0], [43.5, 3636.0], [43.6, 3639.0], [43.7, 3640.0], [43.8, 3642.0], [43.9, 3642.0], [44.0, 3643.0], [44.1, 3645.0], [44.2, 3648.0], [44.3, 3649.0], [44.4, 3652.0], [44.5, 3652.0], [44.6, 3657.0], [44.7, 3660.0], [44.8, 3663.0], [44.9, 3664.0], [45.0, 3665.0], [45.1, 3667.0], [45.2, 3668.0], [45.3, 3669.0], [45.4, 3670.0], [45.5, 3672.0], [45.6, 3674.0], [45.7, 3675.0], [45.8, 3677.0], [45.9, 3679.0], [46.0, 3681.0], [46.1, 3683.0], [46.2, 3685.0], [46.3, 3688.0], [46.4, 3689.0], [46.5, 3690.0], [46.6, 3692.0], [46.7, 3694.0], [46.8, 3696.0], [46.9, 3701.0], [47.0, 3703.0], [47.1, 3703.0], [47.2, 3707.0], [47.3, 3708.0], [47.4, 3709.0], [47.5, 3710.0], [47.6, 3711.0], [47.7, 3712.0], [47.8, 3714.0], [47.9, 3715.0], [48.0, 3716.0], [48.1, 3717.0], [48.2, 3719.0], [48.3, 3720.0], [48.4, 3724.0], [48.5, 3727.0], [48.6, 3727.0], [48.7, 3728.0], [48.8, 3730.0], [48.9, 3732.0], [49.0, 3734.0], [49.1, 3737.0], [49.2, 3740.0], [49.3, 3741.0], [49.4, 3742.0], [49.5, 3744.0], [49.6, 3746.0], [49.7, 3746.0], [49.8, 3748.0], [49.9, 3749.0], [50.0, 3750.0], [50.1, 3752.0], [50.2, 3755.0], [50.3, 3755.0], [50.4, 3756.0], [50.5, 3757.0], [50.6, 3758.0], [50.7, 3761.0], [50.8, 3763.0], [50.9, 3764.0], [51.0, 3765.0], [51.1, 3768.0], [51.2, 3770.0], [51.3, 3770.0], [51.4, 3772.0], [51.5, 3774.0], [51.6, 3776.0], [51.7, 3778.0], [51.8, 3779.0], [51.9, 3782.0], [52.0, 3784.0], [52.1, 3785.0], [52.2, 3788.0], [52.3, 3788.0], [52.4, 3789.0], [52.5, 3792.0], [52.6, 3793.0], [52.7, 3796.0], [52.8, 3799.0], [52.9, 3801.0], [53.0, 3804.0], [53.1, 3806.0], [53.2, 3808.0], [53.3, 3809.0], [53.4, 3809.0], [53.5, 3813.0], [53.6, 3815.0], [53.7, 3816.0], [53.8, 3818.0], [53.9, 3821.0], [54.0, 3822.0], [54.1, 3825.0], [54.2, 3830.0], [54.3, 3832.0], [54.4, 3834.0], [54.5, 3834.0], [54.6, 3837.0], [54.7, 3839.0], [54.8, 3841.0], [54.9, 3842.0], [55.0, 3844.0], [55.1, 3845.0], [55.2, 3847.0], [55.3, 3849.0], [55.4, 3850.0], [55.5, 3851.0], [55.6, 3852.0], [55.7, 3855.0], [55.8, 3856.0], [55.9, 3858.0], [56.0, 3858.0], [56.1, 3860.0], [56.2, 3861.0], [56.3, 3862.0], [56.4, 3863.0], [56.5, 3867.0], [56.6, 3868.0], [56.7, 3869.0], [56.8, 3870.0], [56.9, 3873.0], [57.0, 3875.0], [57.1, 3876.0], [57.2, 3877.0], [57.3, 3879.0], [57.4, 3880.0], [57.5, 3881.0], [57.6, 3882.0], [57.7, 3883.0], [57.8, 3885.0], [57.9, 3887.0], [58.0, 3889.0], [58.1, 3890.0], [58.2, 3891.0], [58.3, 3892.0], [58.4, 3895.0], [58.5, 3897.0], [58.6, 3898.0], [58.7, 3898.0], [58.8, 3901.0], [58.9, 3902.0], [59.0, 3904.0], [59.1, 3905.0], [59.2, 3909.0], [59.3, 3910.0], [59.4, 3911.0], [59.5, 3913.0], [59.6, 3915.0], [59.7, 3916.0], [59.8, 3917.0], [59.9, 3919.0], [60.0, 3920.0], [60.1, 3922.0], [60.2, 3925.0], [60.3, 3925.0], [60.4, 3926.0], [60.5, 3928.0], [60.6, 3929.0], [60.7, 3932.0], [60.8, 3933.0], [60.9, 3935.0], [61.0, 3936.0], [61.1, 3939.0], [61.2, 3941.0], [61.3, 3943.0], [61.4, 3945.0], [61.5, 3947.0], [61.6, 3950.0], [61.7, 3951.0], [61.8, 3953.0], [61.9, 3954.0], [62.0, 3958.0], [62.1, 3960.0], [62.2, 3964.0], [62.3, 3965.0], [62.4, 3966.0], [62.5, 3968.0], [62.6, 3970.0], [62.7, 3974.0], [62.8, 3978.0], [62.9, 3980.0], [63.0, 3981.0], [63.1, 3984.0], [63.2, 3985.0], [63.3, 3988.0], [63.4, 3992.0], [63.5, 3996.0], [63.6, 3999.0], [63.7, 4001.0], [63.8, 4003.0], [63.9, 4006.0], [64.0, 4010.0], [64.1, 4013.0], [64.2, 4016.0], [64.3, 4019.0], [64.4, 4022.0], [64.5, 4024.0], [64.6, 4029.0], [64.7, 4033.0], [64.8, 4034.0], [64.9, 4041.0], [65.0, 4043.0], [65.1, 4048.0], [65.2, 4050.0], [65.3, 4054.0], [65.4, 4055.0], [65.5, 4062.0], [65.6, 4064.0], [65.7, 4068.0], [65.8, 4071.0], [65.9, 4076.0], [66.0, 4081.0], [66.1, 4085.0], [66.2, 4090.0], [66.3, 4093.0], [66.4, 4096.0], [66.5, 4101.0], [66.6, 4101.0], [66.7, 4104.0], [66.8, 4107.0], [66.9, 4111.0], [67.0, 4116.0], [67.1, 4120.0], [67.2, 4123.0], [67.3, 4127.0], [67.4, 4133.0], [67.5, 4136.0], [67.6, 4141.0], [67.7, 4142.0], [67.8, 4148.0], [67.9, 4155.0], [68.0, 4161.0], [68.1, 4164.0], [68.2, 4167.0], [68.3, 4170.0], [68.4, 4173.0], [68.5, 4175.0], [68.6, 4179.0], [68.7, 4183.0], [68.8, 4186.0], [68.9, 4189.0], [69.0, 4192.0], [69.1, 4196.0], [69.2, 4201.0], [69.3, 4207.0], [69.4, 4213.0], [69.5, 4217.0], [69.6, 4224.0], [69.7, 4226.0], [69.8, 4233.0], [69.9, 4236.0], [70.0, 4239.0], [70.1, 4241.0], [70.2, 4244.0], [70.3, 4253.0], [70.4, 4262.0], [70.5, 4269.0], [70.6, 4275.0], [70.7, 4277.0], [70.8, 4286.0], [70.9, 4287.0], [71.0, 4296.0], [71.1, 4301.0], [71.2, 4305.0], [71.3, 4324.0], [71.4, 4343.0], [71.5, 4362.0], [71.6, 4366.0], [71.7, 4380.0], [71.8, 4396.0], [71.9, 4404.0], [72.0, 4411.0], [72.1, 4421.0], [72.2, 4433.0], [72.3, 4442.0], [72.4, 4452.0], [72.5, 4455.0], [72.6, 4466.0], [72.7, 4478.0], [72.8, 4499.0], [72.9, 4518.0], [73.0, 4545.0], [73.1, 4553.0], [73.2, 4572.0], [73.3, 4580.0], [73.4, 4586.0], [73.5, 4609.0], [73.6, 4627.0], [73.7, 4640.0], [73.8, 4648.0], [73.9, 4665.0], [74.0, 4676.0], [74.1, 4685.0], [74.2, 4704.0], [74.3, 4723.0], [74.4, 4751.0], [74.5, 4770.0], [74.6, 4783.0], [74.7, 4798.0], [74.8, 4803.0], [74.9, 4831.0], [75.0, 4856.0], [75.1, 4869.0], [75.2, 4886.0], [75.3, 4900.0], [75.4, 4932.0], [75.5, 4939.0], [75.6, 4955.0], [75.7, 4973.0], [75.8, 4993.0], [75.9, 5019.0], [76.0, 5063.0], [76.1, 5113.0], [76.2, 5133.0], [76.3, 5148.0], [76.4, 5166.0], [76.5, 5187.0], [76.6, 5220.0], [76.7, 5225.0], [76.8, 5245.0], [76.9, 5292.0], [77.0, 5320.0], [77.1, 5368.0], [77.2, 5417.0], [77.3, 5460.0], [77.4, 5491.0], [77.5, 5508.0], [77.6, 5548.0], [77.7, 5584.0], [77.8, 5601.0], [77.9, 5632.0], [78.0, 5644.0], [78.1, 5691.0], [78.2, 5734.0], [78.3, 5750.0], [78.4, 5762.0], [78.5, 5787.0], [78.6, 5796.0], [78.7, 5835.0], [78.8, 5853.0], [78.9, 5898.0], [79.0, 5907.0], [79.1, 5941.0], [79.2, 5967.0], [79.3, 6001.0], [79.4, 6007.0], [79.5, 6030.0], [79.6, 6043.0], [79.7, 6074.0], [79.8, 6097.0], [79.9, 6153.0], [80.0, 6173.0], [80.1, 6257.0], [80.2, 6272.0], [80.3, 6280.0], [80.4, 6322.0], [80.5, 6422.0], [80.6, 6432.0], [80.7, 6458.0], [80.8, 6517.0], [80.9, 6550.0], [81.0, 6584.0], [81.1, 6683.0], [81.2, 6708.0], [81.3, 6770.0], [81.4, 6791.0], [81.5, 6815.0], [81.6, 6833.0], [81.7, 6850.0], [81.8, 6887.0], [81.9, 6949.0], [82.0, 7005.0], [82.1, 7011.0], [82.2, 7046.0], [82.3, 7118.0], [82.4, 7148.0], [82.5, 7163.0], [82.6, 7193.0], [82.7, 7218.0], [82.8, 7253.0], [82.9, 7263.0], [83.0, 7317.0], [83.1, 7339.0], [83.2, 7401.0], [83.3, 7414.0], [83.4, 7425.0], [83.5, 7445.0], [83.6, 7476.0], [83.7, 7507.0], [83.8, 7533.0], [83.9, 7559.0], [84.0, 7585.0], [84.1, 7619.0], [84.2, 7627.0], [84.3, 7692.0], [84.4, 7713.0], [84.5, 7735.0], [84.6, 7792.0], [84.7, 7811.0], [84.8, 7832.0], [84.9, 7880.0], [85.0, 7949.0], [85.1, 7960.0], [85.2, 7982.0], [85.3, 8000.0], [85.4, 8006.0], [85.5, 8055.0], [85.6, 8065.0], [85.7, 8101.0], [85.8, 8140.0], [85.9, 8176.0], [86.0, 8191.0], [86.1, 8202.0], [86.2, 8224.0], [86.3, 8253.0], [86.4, 8266.0], [86.5, 8283.0], [86.6, 8296.0], [86.7, 8321.0], [86.8, 8324.0], [86.9, 8335.0], [87.0, 8359.0], [87.1, 8397.0], [87.2, 8419.0], [87.3, 8448.0], [87.4, 8468.0], [87.5, 8495.0], [87.6, 8527.0], [87.7, 8564.0], [87.8, 8581.0], [87.9, 8606.0], [88.0, 8639.0], [88.1, 8667.0], [88.2, 8680.0], [88.3, 8689.0], [88.4, 8713.0], [88.5, 8735.0], [88.6, 8752.0], [88.7, 8790.0], [88.8, 8800.0], [88.9, 8825.0], [89.0, 8834.0], [89.1, 8852.0], [89.2, 8872.0], [89.3, 8890.0], [89.4, 8914.0], [89.5, 8928.0], [89.6, 8971.0], [89.7, 8987.0], [89.8, 9005.0], [89.9, 9027.0], [90.0, 9034.0], [90.1, 9092.0], [90.2, 9110.0], [90.3, 9126.0], [90.4, 9165.0], [90.5, 9196.0], [90.6, 9225.0], [90.7, 9268.0], [90.8, 9296.0], [90.9, 9334.0], [91.0, 9374.0], [91.1, 9433.0], [91.2, 9463.0], [91.3, 9478.0], [91.4, 9514.0], [91.5, 9520.0], [91.6, 9527.0], [91.7, 9539.0], [91.8, 9569.0], [91.9, 9650.0], [92.0, 9707.0], [92.1, 9762.0], [92.2, 9819.0], [92.3, 9853.0], [92.4, 9902.0], [92.5, 9934.0], [92.6, 9949.0], [92.7, 9983.0], [92.8, 10014.0], [92.9, 10058.0], [93.0, 10105.0], [93.1, 10144.0], [93.2, 10190.0], [93.3, 10226.0], [93.4, 10293.0], [93.5, 10315.0], [93.6, 10397.0], [93.7, 10429.0], [93.8, 10479.0], [93.9, 10538.0], [94.0, 10618.0], [94.1, 10755.0], [94.2, 10846.0], [94.3, 10878.0], [94.4, 10924.0], [94.5, 11059.0], [94.6, 11158.0], [94.7, 11256.0], [94.8, 11343.0], [94.9, 11395.0], [95.0, 11477.0], [95.1, 11518.0], [95.2, 11635.0], [95.3, 11694.0], [95.4, 11754.0], [95.5, 11913.0], [95.6, 12058.0], [95.7, 12110.0], [95.8, 12238.0], [95.9, 12369.0], [96.0, 12470.0], [96.1, 12510.0], [96.2, 12628.0], [96.3, 12708.0], [96.4, 12844.0], [96.5, 12932.0], [96.6, 13145.0], [96.7, 13179.0], [96.8, 13333.0], [96.9, 13465.0], [97.0, 13567.0], [97.1, 13656.0], [97.2, 13826.0], [97.3, 13975.0], [97.4, 14173.0], [97.5, 14366.0], [97.6, 14496.0], [97.7, 14579.0], [97.8, 14822.0], [97.9, 14865.0], [98.0, 14960.0], [98.1, 15205.0], [98.2, 15408.0], [98.3, 15554.0], [98.4, 15852.0], [98.5, 16288.0], [98.6, 16582.0], [98.7, 16853.0], [98.8, 17264.0], [98.9, 17581.0], [99.0, 18809.0], [99.1, 18917.0], [99.2, 18995.0], [99.3, 19695.0], [99.4, 20389.0], [99.5, 21506.0], [99.6, 21597.0], [99.7, 24306.0], [99.8, 26147.0], [99.9, 28448.0], [100.0, 29450.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 39.0], [0.1, 50.0], [0.2, 55.0], [0.3, 69.0], [0.4, 75.0], [0.5, 85.0], [0.6, 96.0], [0.7, 103.0], [0.8, 111.0], [0.9, 116.0], [1.0, 120.0], [1.1, 122.0], [1.2, 123.0], [1.3, 127.0], [1.4, 128.0], [1.5, 136.0], [1.6, 137.0], [1.7, 139.0], [1.8, 143.0], [1.9, 144.0], [2.0, 146.0], [2.1, 148.0], [2.2, 155.0], [2.3, 157.0], [2.4, 165.0], [2.5, 167.0], [2.6, 176.0], [2.7, 183.0], [2.8, 197.0], [2.9, 211.0], [3.0, 234.0], [3.1, 242.0], [3.2, 250.0], [3.3, 256.0], [3.4, 268.0], [3.5, 277.0], [3.6, 282.0], [3.7, 302.0], [3.8, 316.0], [3.9, 327.0], [4.0, 335.0], [4.1, 339.0], [4.2, 340.0], [4.3, 341.0], [4.4, 343.0], [4.5, 346.0], [4.6, 347.0], [4.7, 350.0], [4.8, 350.0], [4.9, 350.0], [5.0, 353.0], [5.1, 355.0], [5.2, 366.0], [5.3, 376.0], [5.4, 381.0], [5.5, 391.0], [5.6, 400.0], [5.7, 410.0], [5.8, 415.0], [5.9, 421.0], [6.0, 428.0], [6.1, 440.0], [6.2, 442.0], [6.3, 452.0], [6.4, 456.0], [6.5, 469.0], [6.6, 473.0], [6.7, 484.0], [6.8, 488.0], [6.9, 490.0], [7.0, 499.0], [7.1, 506.0], [7.2, 509.0], [7.3, 516.0], [7.4, 520.0], [7.5, 524.0], [7.6, 535.0], [7.7, 538.0], [7.8, 540.0], [7.9, 545.0], [8.0, 550.0], [8.1, 554.0], [8.2, 572.0], [8.3, 576.0], [8.4, 585.0], [8.5, 607.0], [8.6, 624.0], [8.7, 643.0], [8.8, 649.0], [8.9, 659.0], [9.0, 671.0], [9.1, 678.0], [9.2, 682.0], [9.3, 690.0], [9.4, 693.0], [9.5, 704.0], [9.6, 711.0], [9.7, 714.0], [9.8, 718.0], [9.9, 723.0], [10.0, 725.0], [10.1, 726.0], [10.2, 728.0], [10.3, 730.0], [10.4, 733.0], [10.5, 740.0], [10.6, 742.0], [10.7, 747.0], [10.8, 756.0], [10.9, 758.0], [11.0, 761.0], [11.1, 762.0], [11.2, 766.0], [11.3, 769.0], [11.4, 774.0], [11.5, 775.0], [11.6, 779.0], [11.7, 786.0], [11.8, 790.0], [11.9, 792.0], [12.0, 797.0], [12.1, 798.0], [12.2, 801.0], [12.3, 804.0], [12.4, 809.0], [12.5, 810.0], [12.6, 813.0], [12.7, 815.0], [12.8, 815.0], [12.9, 816.0], [13.0, 817.0], [13.1, 819.0], [13.2, 820.0], [13.3, 821.0], [13.4, 822.0], [13.5, 826.0], [13.6, 828.0], [13.7, 830.0], [13.8, 833.0], [13.9, 838.0], [14.0, 841.0], [14.1, 843.0], [14.2, 846.0], [14.3, 853.0], [14.4, 857.0], [14.5, 859.0], [14.6, 861.0], [14.7, 863.0], [14.8, 867.0], [14.9, 869.0], [15.0, 873.0], [15.1, 878.0], [15.2, 885.0], [15.3, 891.0], [15.4, 894.0], [15.5, 899.0], [15.6, 902.0], [15.7, 903.0], [15.8, 906.0], [15.9, 909.0], [16.0, 910.0], [16.1, 916.0], [16.2, 923.0], [16.3, 930.0], [16.4, 933.0], [16.5, 937.0], [16.6, 940.0], [16.7, 941.0], [16.8, 943.0], [16.9, 945.0], [17.0, 946.0], [17.1, 950.0], [17.2, 951.0], [17.3, 956.0], [17.4, 959.0], [17.5, 963.0], [17.6, 965.0], [17.7, 967.0], [17.8, 971.0], [17.9, 975.0], [18.0, 979.0], [18.1, 985.0], [18.2, 995.0], [18.3, 1000.0], [18.4, 1013.0], [18.5, 1017.0], [18.6, 1022.0], [18.7, 1027.0], [18.8, 1034.0], [18.9, 1038.0], [19.0, 1049.0], [19.1, 1054.0], [19.2, 1055.0], [19.3, 1061.0], [19.4, 1062.0], [19.5, 1066.0], [19.6, 1067.0], [19.7, 1069.0], [19.8, 1070.0], [19.9, 1073.0], [20.0, 1075.0], [20.1, 1076.0], [20.2, 1079.0], [20.3, 1083.0], [20.4, 1085.0], [20.5, 1088.0], [20.6, 1091.0], [20.7, 1092.0], [20.8, 1093.0], [20.9, 1094.0], [21.0, 1097.0], [21.1, 1098.0], [21.2, 1100.0], [21.3, 1102.0], [21.4, 1104.0], [21.5, 1105.0], [21.6, 1107.0], [21.7, 1107.0], [21.8, 1108.0], [21.9, 1109.0], [22.0, 1111.0], [22.1, 1114.0], [22.2, 1115.0], [22.3, 1116.0], [22.4, 1117.0], [22.5, 1117.0], [22.6, 1118.0], [22.7, 1121.0], [22.8, 1121.0], [22.9, 1123.0], [23.0, 1124.0], [23.1, 1125.0], [23.2, 1126.0], [23.3, 1126.0], [23.4, 1127.0], [23.5, 1127.0], [23.6, 1129.0], [23.7, 1129.0], [23.8, 1130.0], [23.9, 1131.0], [24.0, 1133.0], [24.1, 1134.0], [24.2, 1134.0], [24.3, 1135.0], [24.4, 1136.0], [24.5, 1137.0], [24.6, 1137.0], [24.7, 1138.0], [24.8, 1138.0], [24.9, 1141.0], [25.0, 1142.0], [25.1, 1143.0], [25.2, 1144.0], [25.3, 1145.0], [25.4, 1145.0], [25.5, 1146.0], [25.6, 1148.0], [25.7, 1149.0], [25.8, 1150.0], [25.9, 1151.0], [26.0, 1152.0], [26.1, 1153.0], [26.2, 1155.0], [26.3, 1156.0], [26.4, 1157.0], [26.5, 1158.0], [26.6, 1160.0], [26.7, 1161.0], [26.8, 1162.0], [26.9, 1164.0], [27.0, 1166.0], [27.1, 1166.0], [27.2, 1168.0], [27.3, 1168.0], [27.4, 1170.0], [27.5, 1171.0], [27.6, 1172.0], [27.7, 1173.0], [27.8, 1175.0], [27.9, 1176.0], [28.0, 1179.0], [28.1, 1179.0], [28.2, 1179.0], [28.3, 1181.0], [28.4, 1181.0], [28.5, 1183.0], [28.6, 1183.0], [28.7, 1185.0], [28.8, 1187.0], [28.9, 1189.0], [29.0, 1189.0], [29.1, 1190.0], [29.2, 1191.0], [29.3, 1192.0], [29.4, 1193.0], [29.5, 1193.0], [29.6, 1195.0], [29.7, 1196.0], [29.8, 1197.0], [29.9, 1198.0], [30.0, 1199.0], [30.1, 1200.0], [30.2, 1201.0], [30.3, 1202.0], [30.4, 1204.0], [30.5, 1206.0], [30.6, 1206.0], [30.7, 1207.0], [30.8, 1208.0], [30.9, 1209.0], [31.0, 1209.0], [31.1, 1210.0], [31.2, 1210.0], [31.3, 1211.0], [31.4, 1213.0], [31.5, 1214.0], [31.6, 1214.0], [31.7, 1216.0], [31.8, 1216.0], [31.9, 1217.0], [32.0, 1218.0], [32.1, 1219.0], [32.2, 1220.0], [32.3, 1220.0], [32.4, 1222.0], [32.5, 1222.0], [32.6, 1224.0], [32.7, 1226.0], [32.8, 1226.0], [32.9, 1227.0], [33.0, 1228.0], [33.1, 1230.0], [33.2, 1232.0], [33.3, 1233.0], [33.4, 1234.0], [33.5, 1236.0], [33.6, 1237.0], [33.7, 1238.0], [33.8, 1239.0], [33.9, 1239.0], [34.0, 1240.0], [34.1, 1242.0], [34.2, 1243.0], [34.3, 1244.0], [34.4, 1246.0], [34.5, 1248.0], [34.6, 1249.0], [34.7, 1250.0], [34.8, 1252.0], [34.9, 1253.0], [35.0, 1254.0], [35.1, 1255.0], [35.2, 1256.0], [35.3, 1257.0], [35.4, 1260.0], [35.5, 1262.0], [35.6, 1263.0], [35.7, 1265.0], [35.8, 1266.0], [35.9, 1268.0], [36.0, 1269.0], [36.1, 1271.0], [36.2, 1275.0], [36.3, 1278.0], [36.4, 1279.0], [36.5, 1281.0], [36.6, 1283.0], [36.7, 1286.0], [36.8, 1287.0], [36.9, 1291.0], [37.0, 1294.0], [37.1, 1295.0], [37.2, 1296.0], [37.3, 1297.0], [37.4, 1299.0], [37.5, 1300.0], [37.6, 1301.0], [37.7, 1303.0], [37.8, 1304.0], [37.9, 1305.0], [38.0, 1307.0], [38.1, 1310.0], [38.2, 1311.0], [38.3, 1314.0], [38.4, 1316.0], [38.5, 1318.0], [38.6, 1319.0], [38.7, 1320.0], [38.8, 1321.0], [38.9, 1322.0], [39.0, 1323.0], [39.1, 1325.0], [39.2, 1326.0], [39.3, 1328.0], [39.4, 1329.0], [39.5, 1330.0], [39.6, 1331.0], [39.7, 1332.0], [39.8, 1332.0], [39.9, 1333.0], [40.0, 1334.0], [40.1, 1335.0], [40.2, 1336.0], [40.3, 1337.0], [40.4, 1337.0], [40.5, 1338.0], [40.6, 1339.0], [40.7, 1340.0], [40.8, 1341.0], [40.9, 1342.0], [41.0, 1343.0], [41.1, 1345.0], [41.2, 1347.0], [41.3, 1348.0], [41.4, 1349.0], [41.5, 1350.0], [41.6, 1350.0], [41.7, 1351.0], [41.8, 1352.0], [41.9, 1353.0], [42.0, 1354.0], [42.1, 1355.0], [42.2, 1356.0], [42.3, 1357.0], [42.4, 1359.0], [42.5, 1360.0], [42.6, 1360.0], [42.7, 1362.0], [42.8, 1364.0], [42.9, 1365.0], [43.0, 1365.0], [43.1, 1366.0], [43.2, 1367.0], [43.3, 1368.0], [43.4, 1369.0], [43.5, 1371.0], [43.6, 1372.0], [43.7, 1372.0], [43.8, 1374.0], [43.9, 1375.0], [44.0, 1377.0], [44.1, 1377.0], [44.2, 1378.0], [44.3, 1379.0], [44.4, 1379.0], [44.5, 1381.0], [44.6, 1381.0], [44.7, 1383.0], [44.8, 1383.0], [44.9, 1384.0], [45.0, 1385.0], [45.1, 1386.0], [45.2, 1386.0], [45.3, 1387.0], [45.4, 1389.0], [45.5, 1390.0], [45.6, 1391.0], [45.7, 1391.0], [45.8, 1392.0], [45.9, 1393.0], [46.0, 1393.0], [46.1, 1394.0], [46.2, 1396.0], [46.3, 1397.0], [46.4, 1398.0], [46.5, 1399.0], [46.6, 1401.0], [46.7, 1403.0], [46.8, 1403.0], [46.9, 1404.0], [47.0, 1404.0], [47.1, 1405.0], [47.2, 1406.0], [47.3, 1406.0], [47.4, 1406.0], [47.5, 1408.0], [47.6, 1408.0], [47.7, 1409.0], [47.8, 1411.0], [47.9, 1411.0], [48.0, 1413.0], [48.1, 1413.0], [48.2, 1414.0], [48.3, 1415.0], [48.4, 1415.0], [48.5, 1416.0], [48.6, 1417.0], [48.7, 1418.0], [48.8, 1418.0], [48.9, 1418.0], [49.0, 1419.0], [49.1, 1420.0], [49.2, 1421.0], [49.3, 1421.0], [49.4, 1423.0], [49.5, 1423.0], [49.6, 1424.0], [49.7, 1424.0], [49.8, 1425.0], [49.9, 1425.0], [50.0, 1426.0], [50.1, 1427.0], [50.2, 1429.0], [50.3, 1429.0], [50.4, 1431.0], [50.5, 1431.0], [50.6, 1432.0], [50.7, 1432.0], [50.8, 1433.0], [50.9, 1433.0], [51.0, 1434.0], [51.1, 1434.0], [51.2, 1435.0], [51.3, 1436.0], [51.4, 1436.0], [51.5, 1437.0], [51.6, 1438.0], [51.7, 1438.0], [51.8, 1439.0], [51.9, 1439.0], [52.0, 1440.0], [52.1, 1441.0], [52.2, 1441.0], [52.3, 1442.0], [52.4, 1443.0], [52.5, 1443.0], [52.6, 1444.0], [52.7, 1445.0], [52.8, 1445.0], [52.9, 1446.0], [53.0, 1446.0], [53.1, 1447.0], [53.2, 1447.0], [53.3, 1448.0], [53.4, 1448.0], [53.5, 1449.0], [53.6, 1449.0], [53.7, 1450.0], [53.8, 1450.0], [53.9, 1451.0], [54.0, 1451.0], [54.1, 1451.0], [54.2, 1452.0], [54.3, 1452.0], [54.4, 1453.0], [54.5, 1453.0], [54.6, 1454.0], [54.7, 1454.0], [54.8, 1455.0], [54.9, 1456.0], [55.0, 1456.0], [55.1, 1457.0], [55.2, 1458.0], [55.3, 1458.0], [55.4, 1459.0], [55.5, 1460.0], [55.6, 1461.0], [55.7, 1462.0], [55.8, 1463.0], [55.9, 1464.0], [56.0, 1464.0], [56.1, 1465.0], [56.2, 1465.0], [56.3, 1465.0], [56.4, 1466.0], [56.5, 1466.0], [56.6, 1466.0], [56.7, 1467.0], [56.8, 1467.0], [56.9, 1468.0], [57.0, 1468.0], [57.1, 1469.0], [57.2, 1469.0], [57.3, 1471.0], [57.4, 1472.0], [57.5, 1472.0], [57.6, 1472.0], [57.7, 1473.0], [57.8, 1473.0], [57.9, 1473.0], [58.0, 1474.0], [58.1, 1474.0], [58.2, 1475.0], [58.3, 1476.0], [58.4, 1476.0], [58.5, 1477.0], [58.6, 1477.0], [58.7, 1478.0], [58.8, 1479.0], [58.9, 1479.0], [59.0, 1481.0], [59.1, 1481.0], [59.2, 1482.0], [59.3, 1483.0], [59.4, 1483.0], [59.5, 1484.0], [59.6, 1484.0], [59.7, 1484.0], [59.8, 1484.0], [59.9, 1485.0], [60.0, 1486.0], [60.1, 1486.0], [60.2, 1486.0], [60.3, 1487.0], [60.4, 1488.0], [60.5, 1489.0], [60.6, 1489.0], [60.7, 1490.0], [60.8, 1490.0], [60.9, 1491.0], [61.0, 1491.0], [61.1, 1492.0], [61.2, 1493.0], [61.3, 1493.0], [61.4, 1494.0], [61.5, 1494.0], [61.6, 1495.0], [61.7, 1495.0], [61.8, 1495.0], [61.9, 1496.0], [62.0, 1497.0], [62.1, 1497.0], [62.2, 1498.0], [62.3, 1498.0], [62.4, 1498.0], [62.5, 1499.0], [62.6, 1499.0], [62.7, 1500.0], [62.8, 1500.0], [62.9, 1501.0], [63.0, 1502.0], [63.1, 1502.0], [63.2, 1503.0], [63.3, 1503.0], [63.4, 1503.0], [63.5, 1504.0], [63.6, 1504.0], [63.7, 1505.0], [63.8, 1506.0], [63.9, 1507.0], [64.0, 1508.0], [64.1, 1508.0], [64.2, 1509.0], [64.3, 1510.0], [64.4, 1511.0], [64.5, 1511.0], [64.6, 1511.0], [64.7, 1512.0], [64.8, 1513.0], [64.9, 1513.0], [65.0, 1514.0], [65.1, 1515.0], [65.2, 1516.0], [65.3, 1516.0], [65.4, 1516.0], [65.5, 1518.0], [65.6, 1519.0], [65.7, 1520.0], [65.8, 1520.0], [65.9, 1522.0], [66.0, 1522.0], [66.1, 1523.0], [66.2, 1523.0], [66.3, 1524.0], [66.4, 1524.0], [66.5, 1526.0], [66.6, 1526.0], [66.7, 1527.0], [66.8, 1528.0], [66.9, 1529.0], [67.0, 1530.0], [67.1, 1530.0], [67.2, 1531.0], [67.3, 1532.0], [67.4, 1533.0], [67.5, 1534.0], [67.6, 1534.0], [67.7, 1535.0], [67.8, 1535.0], [67.9, 1536.0], [68.0, 1537.0], [68.1, 1537.0], [68.2, 1538.0], [68.3, 1539.0], [68.4, 1539.0], [68.5, 1539.0], [68.6, 1539.0], [68.7, 1540.0], [68.8, 1541.0], [68.9, 1541.0], [69.0, 1541.0], [69.1, 1542.0], [69.2, 1543.0], [69.3, 1543.0], [69.4, 1544.0], [69.5, 1545.0], [69.6, 1545.0], [69.7, 1545.0], [69.8, 1546.0], [69.9, 1547.0], [70.0, 1547.0], [70.1, 1548.0], [70.2, 1548.0], [70.3, 1549.0], [70.4, 1549.0], [70.5, 1550.0], [70.6, 1551.0], [70.7, 1551.0], [70.8, 1552.0], [70.9, 1553.0], [71.0, 1553.0], [71.1, 1554.0], [71.2, 1554.0], [71.3, 1554.0], [71.4, 1555.0], [71.5, 1555.0], [71.6, 1557.0], [71.7, 1557.0], [71.8, 1560.0], [71.9, 1560.0], [72.0, 1561.0], [72.1, 1562.0], [72.2, 1562.0], [72.3, 1563.0], [72.4, 1564.0], [72.5, 1565.0], [72.6, 1566.0], [72.7, 1567.0], [72.8, 1567.0], [72.9, 1568.0], [73.0, 1569.0], [73.1, 1570.0], [73.2, 1571.0], [73.3, 1571.0], [73.4, 1572.0], [73.5, 1572.0], [73.6, 1573.0], [73.7, 1573.0], [73.8, 1574.0], [73.9, 1575.0], [74.0, 1577.0], [74.1, 1577.0], [74.2, 1578.0], [74.3, 1579.0], [74.4, 1580.0], [74.5, 1580.0], [74.6, 1581.0], [74.7, 1581.0], [74.8, 1582.0], [74.9, 1582.0], [75.0, 1583.0], [75.1, 1584.0], [75.2, 1585.0], [75.3, 1586.0], [75.4, 1588.0], [75.5, 1589.0], [75.6, 1589.0], [75.7, 1590.0], [75.8, 1591.0], [75.9, 1592.0], [76.0, 1593.0], [76.1, 1594.0], [76.2, 1596.0], [76.3, 1597.0], [76.4, 1598.0], [76.5, 1599.0], [76.6, 1600.0], [76.7, 1601.0], [76.8, 1601.0], [76.9, 1602.0], [77.0, 1605.0], [77.1, 1606.0], [77.2, 1606.0], [77.3, 1607.0], [77.4, 1608.0], [77.5, 1609.0], [77.6, 1610.0], [77.7, 1611.0], [77.8, 1612.0], [77.9, 1613.0], [78.0, 1614.0], [78.1, 1614.0], [78.2, 1615.0], [78.3, 1617.0], [78.4, 1618.0], [78.5, 1620.0], [78.6, 1622.0], [78.7, 1622.0], [78.8, 1623.0], [78.9, 1623.0], [79.0, 1624.0], [79.1, 1626.0], [79.2, 1626.0], [79.3, 1628.0], [79.4, 1629.0], [79.5, 1630.0], [79.6, 1630.0], [79.7, 1631.0], [79.8, 1633.0], [79.9, 1633.0], [80.0, 1634.0], [80.1, 1635.0], [80.2, 1635.0], [80.3, 1636.0], [80.4, 1637.0], [80.5, 1638.0], [80.6, 1639.0], [80.7, 1639.0], [80.8, 1640.0], [80.9, 1640.0], [81.0, 1641.0], [81.1, 1641.0], [81.2, 1642.0], [81.3, 1642.0], [81.4, 1643.0], [81.5, 1644.0], [81.6, 1645.0], [81.7, 1646.0], [81.8, 1647.0], [81.9, 1648.0], [82.0, 1650.0], [82.1, 1651.0], [82.2, 1652.0], [82.3, 1653.0], [82.4, 1654.0], [82.5, 1655.0], [82.6, 1655.0], [82.7, 1655.0], [82.8, 1656.0], [82.9, 1658.0], [83.0, 1659.0], [83.1, 1660.0], [83.2, 1660.0], [83.3, 1661.0], [83.4, 1662.0], [83.5, 1663.0], [83.6, 1664.0], [83.7, 1666.0], [83.8, 1668.0], [83.9, 1668.0], [84.0, 1670.0], [84.1, 1670.0], [84.2, 1671.0], [84.3, 1673.0], [84.4, 1676.0], [84.5, 1677.0], [84.6, 1679.0], [84.7, 1680.0], [84.8, 1682.0], [84.9, 1683.0], [85.0, 1684.0], [85.1, 1685.0], [85.2, 1687.0], [85.3, 1690.0], [85.4, 1693.0], [85.5, 1694.0], [85.6, 1694.0], [85.7, 1698.0], [85.8, 1703.0], [85.9, 1704.0], [86.0, 1706.0], [86.1, 1708.0], [86.2, 1709.0], [86.3, 1712.0], [86.4, 1715.0], [86.5, 1720.0], [86.6, 1723.0], [86.7, 1726.0], [86.8, 1730.0], [86.9, 1734.0], [87.0, 1737.0], [87.1, 1743.0], [87.2, 1744.0], [87.3, 1746.0], [87.4, 1750.0], [87.5, 1751.0], [87.6, 1754.0], [87.7, 1755.0], [87.8, 1759.0], [87.9, 1762.0], [88.0, 1765.0], [88.1, 1768.0], [88.2, 1769.0], [88.3, 1772.0], [88.4, 1775.0], [88.5, 1780.0], [88.6, 1781.0], [88.7, 1784.0], [88.8, 1789.0], [88.9, 1791.0], [89.0, 1792.0], [89.1, 1795.0], [89.2, 1798.0], [89.3, 1800.0], [89.4, 1804.0], [89.5, 1809.0], [89.6, 1817.0], [89.7, 1818.0], [89.8, 1823.0], [89.9, 1825.0], [90.0, 1830.0], [90.1, 1833.0], [90.2, 1835.0], [90.3, 1842.0], [90.4, 1848.0], [90.5, 1849.0], [90.6, 1852.0], [90.7, 1853.0], [90.8, 1857.0], [90.9, 1863.0], [91.0, 1876.0], [91.1, 1884.0], [91.2, 1892.0], [91.3, 1899.0], [91.4, 1903.0], [91.5, 1912.0], [91.6, 1924.0], [91.7, 1928.0], [91.8, 1932.0], [91.9, 1937.0], [92.0, 1947.0], [92.1, 1950.0], [92.2, 1953.0], [92.3, 1959.0], [92.4, 1966.0], [92.5, 1971.0], [92.6, 1976.0], [92.7, 1985.0], [92.8, 1995.0], [92.9, 2010.0], [93.0, 2021.0], [93.1, 2032.0], [93.2, 2038.0], [93.3, 2041.0], [93.4, 2047.0], [93.5, 2065.0], [93.6, 2077.0], [93.7, 2111.0], [93.8, 2123.0], [93.9, 2158.0], [94.0, 2196.0], [94.1, 2262.0], [94.2, 2277.0], [94.3, 2297.0], [94.4, 2318.0], [94.5, 2329.0], [94.6, 2363.0], [94.7, 2383.0], [94.8, 2399.0], [94.9, 2436.0], [95.0, 2453.0], [95.1, 2474.0], [95.2, 2475.0], [95.3, 2489.0], [95.4, 2503.0], [95.5, 2513.0], [95.6, 2539.0], [95.7, 2548.0], [95.8, 2559.0], [95.9, 2562.0], [96.0, 2570.0], [96.1, 2572.0], [96.2, 2577.0], [96.3, 2580.0], [96.4, 2582.0], [96.5, 2590.0], [96.6, 2607.0], [96.7, 2612.0], [96.8, 2613.0], [96.9, 2630.0], [97.0, 2646.0], [97.1, 2663.0], [97.2, 2667.0], [97.3, 2671.0], [97.4, 2683.0], [97.5, 2699.0], [97.6, 2716.0], [97.7, 2740.0], [97.8, 2760.0], [97.9, 2767.0], [98.0, 2799.0], [98.1, 2810.0], [98.2, 2819.0], [98.3, 2837.0], [98.4, 2878.0], [98.5, 2920.0], [98.6, 3041.0], [98.7, 3070.0], [98.8, 3116.0], [98.9, 3149.0], [99.0, 3191.0], [99.1, 3231.0], [99.2, 3271.0], [99.3, 3290.0], [99.4, 3330.0], [99.5, 3407.0], [99.6, 3440.0], [99.7, 3629.0], [99.8, 3971.0], [99.9, 4310.0], [100.0, 5712.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 344.0], [0.1, 361.0], [0.2, 390.0], [0.3, 424.0], [0.4, 468.0], [0.5, 500.0], [0.6, 523.0], [0.7, 537.0], [0.8, 559.0], [0.9, 584.0], [1.0, 613.0], [1.1, 626.0], [1.2, 714.0], [1.3, 778.0], [1.4, 825.0], [1.5, 882.0], [1.6, 907.0], [1.7, 938.0], [1.8, 966.0], [1.9, 985.0], [2.0, 1013.0], [2.1, 1023.0], [2.2, 1054.0], [2.3, 1084.0], [2.4, 1144.0], [2.5, 1207.0], [2.6, 1243.0], [2.7, 1260.0], [2.8, 1306.0], [2.9, 1327.0], [3.0, 1338.0], [3.1, 1349.0], [3.2, 1374.0], [3.3, 1432.0], [3.4, 1454.0], [3.5, 1495.0], [3.6, 1531.0], [3.7, 1571.0], [3.8, 1625.0], [3.9, 1645.0], [4.0, 1664.0], [4.1, 1687.0], [4.2, 1724.0], [4.3, 1757.0], [4.4, 1778.0], [4.5, 1793.0], [4.6, 1803.0], [4.7, 1832.0], [4.8, 1837.0], [4.9, 1861.0], [5.0, 1885.0], [5.1, 1899.0], [5.2, 1910.0], [5.3, 1919.0], [5.4, 1928.0], [5.5, 1947.0], [5.6, 1965.0], [5.7, 1993.0], [5.8, 1997.0], [5.9, 2038.0], [6.0, 2068.0], [6.1, 2091.0], [6.2, 2117.0], [6.3, 2126.0], [6.4, 2138.0], [6.5, 2159.0], [6.6, 2187.0], [6.7, 2207.0], [6.8, 2221.0], [6.9, 2234.0], [7.0, 2253.0], [7.1, 2258.0], [7.2, 2262.0], [7.3, 2269.0], [7.4, 2278.0], [7.5, 2296.0], [7.6, 2307.0], [7.7, 2320.0], [7.8, 2332.0], [7.9, 2339.0], [8.0, 2343.0], [8.1, 2354.0], [8.2, 2363.0], [8.3, 2377.0], [8.4, 2403.0], [8.5, 2414.0], [8.6, 2425.0], [8.7, 2437.0], [8.8, 2444.0], [8.9, 2462.0], [9.0, 2469.0], [9.1, 2487.0], [9.2, 2492.0], [9.3, 2511.0], [9.4, 2521.0], [9.5, 2527.0], [9.6, 2535.0], [9.7, 2544.0], [9.8, 2549.0], [9.9, 2556.0], [10.0, 2577.0], [10.1, 2602.0], [10.2, 2610.0], [10.3, 2639.0], [10.4, 2663.0], [10.5, 2696.0], [10.6, 2763.0], [10.7, 2807.0], [10.8, 2848.0], [10.9, 2870.0], [11.0, 2887.0], [11.1, 2934.0], [11.2, 2946.0], [11.3, 2977.0], [11.4, 2996.0], [11.5, 3013.0], [11.6, 3033.0], [11.7, 3040.0], [11.8, 3064.0], [11.9, 3076.0], [12.0, 3082.0], [12.1, 3099.0], [12.2, 3106.0], [12.3, 3120.0], [12.4, 3141.0], [12.5, 3153.0], [12.6, 3161.0], [12.7, 3170.0], [12.8, 3190.0], [12.9, 3195.0], [13.0, 3205.0], [13.1, 3215.0], [13.2, 3222.0], [13.3, 3226.0], [13.4, 3234.0], [13.5, 3249.0], [13.6, 3258.0], [13.7, 3269.0], [13.8, 3284.0], [13.9, 3293.0], [14.0, 3306.0], [14.1, 3314.0], [14.2, 3317.0], [14.3, 3330.0], [14.4, 3341.0], [14.5, 3348.0], [14.6, 3365.0], [14.7, 3388.0], [14.8, 3421.0], [14.9, 3448.0], [15.0, 3476.0], [15.1, 3490.0], [15.2, 3514.0], [15.3, 3540.0], [15.4, 3564.0], [15.5, 3600.0], [15.6, 3618.0], [15.7, 3627.0], [15.8, 3680.0], [15.9, 3692.0], [16.0, 3712.0], [16.1, 3741.0], [16.2, 3772.0], [16.3, 3780.0], [16.4, 3811.0], [16.5, 3821.0], [16.6, 3851.0], [16.7, 3874.0], [16.8, 3913.0], [16.9, 3919.0], [17.0, 3952.0], [17.1, 3977.0], [17.2, 3980.0], [17.3, 4013.0], [17.4, 4025.0], [17.5, 4031.0], [17.6, 4041.0], [17.7, 4048.0], [17.8, 4060.0], [17.9, 4080.0], [18.0, 4091.0], [18.1, 4108.0], [18.2, 4115.0], [18.3, 4120.0], [18.4, 4147.0], [18.5, 4152.0], [18.6, 4167.0], [18.7, 4172.0], [18.8, 4195.0], [18.9, 4214.0], [19.0, 4228.0], [19.1, 4238.0], [19.2, 4247.0], [19.3, 4248.0], [19.4, 4259.0], [19.5, 4284.0], [19.6, 4292.0], [19.7, 4303.0], [19.8, 4313.0], [19.9, 4319.0], [20.0, 4325.0], [20.1, 4327.0], [20.2, 4334.0], [20.3, 4343.0], [20.4, 4347.0], [20.5, 4350.0], [20.6, 4357.0], [20.7, 4362.0], [20.8, 4370.0], [20.9, 4372.0], [21.0, 4386.0], [21.1, 4394.0], [21.2, 4402.0], [21.3, 4407.0], [21.4, 4410.0], [21.5, 4416.0], [21.6, 4423.0], [21.7, 4432.0], [21.8, 4442.0], [21.9, 4448.0], [22.0, 4452.0], [22.1, 4455.0], [22.2, 4460.0], [22.3, 4464.0], [22.4, 4468.0], [22.5, 4471.0], [22.6, 4479.0], [22.7, 4481.0], [22.8, 4482.0], [22.9, 4485.0], [23.0, 4490.0], [23.1, 4496.0], [23.2, 4502.0], [23.3, 4507.0], [23.4, 4511.0], [23.5, 4515.0], [23.6, 4520.0], [23.7, 4524.0], [23.8, 4528.0], [23.9, 4534.0], [24.0, 4535.0], [24.1, 4538.0], [24.2, 4542.0], [24.3, 4544.0], [24.4, 4548.0], [24.5, 4549.0], [24.6, 4557.0], [24.7, 4562.0], [24.8, 4564.0], [24.9, 4565.0], [25.0, 4570.0], [25.1, 4574.0], [25.2, 4578.0], [25.3, 4581.0], [25.4, 4585.0], [25.5, 4588.0], [25.6, 4591.0], [25.7, 4595.0], [25.8, 4596.0], [25.9, 4598.0], [26.0, 4602.0], [26.1, 4603.0], [26.2, 4608.0], [26.3, 4610.0], [26.4, 4614.0], [26.5, 4615.0], [26.6, 4617.0], [26.7, 4619.0], [26.8, 4621.0], [26.9, 4625.0], [27.0, 4628.0], [27.1, 4631.0], [27.2, 4633.0], [27.3, 4636.0], [27.4, 4637.0], [27.5, 4639.0], [27.6, 4641.0], [27.7, 4645.0], [27.8, 4647.0], [27.9, 4649.0], [28.0, 4652.0], [28.1, 4654.0], [28.2, 4658.0], [28.3, 4659.0], [28.4, 4660.0], [28.5, 4663.0], [28.6, 4665.0], [28.7, 4665.0], [28.8, 4667.0], [28.9, 4669.0], [29.0, 4672.0], [29.1, 4673.0], [29.2, 4675.0], [29.3, 4676.0], [29.4, 4678.0], [29.5, 4680.0], [29.6, 4683.0], [29.7, 4686.0], [29.8, 4688.0], [29.9, 4688.0], [30.0, 4694.0], [30.1, 4696.0], [30.2, 4698.0], [30.3, 4699.0], [30.4, 4701.0], [30.5, 4703.0], [30.6, 4705.0], [30.7, 4707.0], [30.8, 4710.0], [30.9, 4713.0], [31.0, 4715.0], [31.1, 4716.0], [31.2, 4717.0], [31.3, 4719.0], [31.4, 4722.0], [31.5, 4724.0], [31.6, 4730.0], [31.7, 4733.0], [31.8, 4736.0], [31.9, 4739.0], [32.0, 4744.0], [32.1, 4745.0], [32.2, 4747.0], [32.3, 4748.0], [32.4, 4750.0], [32.5, 4753.0], [32.6, 4755.0], [32.7, 4756.0], [32.8, 4760.0], [32.9, 4761.0], [33.0, 4763.0], [33.1, 4765.0], [33.2, 4768.0], [33.3, 4770.0], [33.4, 4772.0], [33.5, 4773.0], [33.6, 4776.0], [33.7, 4777.0], [33.8, 4779.0], [33.9, 4780.0], [34.0, 4784.0], [34.1, 4787.0], [34.2, 4792.0], [34.3, 4793.0], [34.4, 4794.0], [34.5, 4801.0], [34.6, 4801.0], [34.7, 4803.0], [34.8, 4805.0], [34.9, 4808.0], [35.0, 4811.0], [35.1, 4814.0], [35.2, 4815.0], [35.3, 4819.0], [35.4, 4823.0], [35.5, 4824.0], [35.6, 4825.0], [35.7, 4828.0], [35.8, 4829.0], [35.9, 4830.0], [36.0, 4831.0], [36.1, 4833.0], [36.2, 4834.0], [36.3, 4838.0], [36.4, 4840.0], [36.5, 4842.0], [36.6, 4848.0], [36.7, 4850.0], [36.8, 4852.0], [36.9, 4855.0], [37.0, 4857.0], [37.1, 4860.0], [37.2, 4862.0], [37.3, 4863.0], [37.4, 4865.0], [37.5, 4868.0], [37.6, 4874.0], [37.7, 4876.0], [37.8, 4880.0], [37.9, 4883.0], [38.0, 4886.0], [38.1, 4890.0], [38.2, 4891.0], [38.3, 4894.0], [38.4, 4897.0], [38.5, 4902.0], [38.6, 4904.0], [38.7, 4905.0], [38.8, 4909.0], [38.9, 4909.0], [39.0, 4913.0], [39.1, 4915.0], [39.2, 4916.0], [39.3, 4916.0], [39.4, 4919.0], [39.5, 4920.0], [39.6, 4921.0], [39.7, 4924.0], [39.8, 4931.0], [39.9, 4936.0], [40.0, 4939.0], [40.1, 4942.0], [40.2, 4946.0], [40.3, 4949.0], [40.4, 4952.0], [40.5, 4954.0], [40.6, 4958.0], [40.7, 4962.0], [40.8, 4965.0], [40.9, 4970.0], [41.0, 4971.0], [41.1, 4975.0], [41.2, 4977.0], [41.3, 4980.0], [41.4, 4981.0], [41.5, 4984.0], [41.6, 4993.0], [41.7, 4997.0], [41.8, 5001.0], [41.9, 5004.0], [42.0, 5005.0], [42.1, 5008.0], [42.2, 5013.0], [42.3, 5015.0], [42.4, 5017.0], [42.5, 5024.0], [42.6, 5026.0], [42.7, 5031.0], [42.8, 5037.0], [42.9, 5049.0], [43.0, 5050.0], [43.1, 5054.0], [43.2, 5058.0], [43.3, 5061.0], [43.4, 5065.0], [43.5, 5067.0], [43.6, 5071.0], [43.7, 5078.0], [43.8, 5083.0], [43.9, 5086.0], [44.0, 5090.0], [44.1, 5091.0], [44.2, 5096.0], [44.3, 5098.0], [44.4, 5101.0], [44.5, 5102.0], [44.6, 5106.0], [44.7, 5112.0], [44.8, 5114.0], [44.9, 5116.0], [45.0, 5117.0], [45.1, 5119.0], [45.2, 5121.0], [45.3, 5122.0], [45.4, 5126.0], [45.5, 5130.0], [45.6, 5131.0], [45.7, 5138.0], [45.8, 5139.0], [45.9, 5143.0], [46.0, 5145.0], [46.1, 5147.0], [46.2, 5151.0], [46.3, 5155.0], [46.4, 5159.0], [46.5, 5162.0], [46.6, 5165.0], [46.7, 5168.0], [46.8, 5172.0], [46.9, 5175.0], [47.0, 5176.0], [47.1, 5178.0], [47.2, 5181.0], [47.3, 5187.0], [47.4, 5191.0], [47.5, 5193.0], [47.6, 5194.0], [47.7, 5199.0], [47.8, 5202.0], [47.9, 5206.0], [48.0, 5208.0], [48.1, 5209.0], [48.2, 5211.0], [48.3, 5218.0], [48.4, 5220.0], [48.5, 5221.0], [48.6, 5223.0], [48.7, 5225.0], [48.8, 5227.0], [48.9, 5229.0], [49.0, 5230.0], [49.1, 5233.0], [49.2, 5235.0], [49.3, 5237.0], [49.4, 5238.0], [49.5, 5240.0], [49.6, 5244.0], [49.7, 5245.0], [49.8, 5247.0], [49.9, 5248.0], [50.0, 5252.0], [50.1, 5253.0], [50.2, 5256.0], [50.3, 5257.0], [50.4, 5261.0], [50.5, 5262.0], [50.6, 5266.0], [50.7, 5269.0], [50.8, 5271.0], [50.9, 5273.0], [51.0, 5276.0], [51.1, 5279.0], [51.2, 5280.0], [51.3, 5281.0], [51.4, 5283.0], [51.5, 5285.0], [51.6, 5286.0], [51.7, 5287.0], [51.8, 5293.0], [51.9, 5297.0], [52.0, 5299.0], [52.1, 5300.0], [52.2, 5303.0], [52.3, 5306.0], [52.4, 5310.0], [52.5, 5316.0], [52.6, 5318.0], [52.7, 5319.0], [52.8, 5321.0], [52.9, 5323.0], [53.0, 5326.0], [53.1, 5328.0], [53.2, 5330.0], [53.3, 5331.0], [53.4, 5332.0], [53.5, 5333.0], [53.6, 5335.0], [53.7, 5338.0], [53.8, 5341.0], [53.9, 5343.0], [54.0, 5347.0], [54.1, 5348.0], [54.2, 5352.0], [54.3, 5354.0], [54.4, 5356.0], [54.5, 5361.0], [54.6, 5363.0], [54.7, 5364.0], [54.8, 5365.0], [54.9, 5368.0], [55.0, 5372.0], [55.1, 5374.0], [55.2, 5381.0], [55.3, 5384.0], [55.4, 5386.0], [55.5, 5388.0], [55.6, 5389.0], [55.7, 5391.0], [55.8, 5396.0], [55.9, 5399.0], [56.0, 5400.0], [56.1, 5401.0], [56.2, 5403.0], [56.3, 5404.0], [56.4, 5406.0], [56.5, 5409.0], [56.6, 5411.0], [56.7, 5412.0], [56.8, 5415.0], [56.9, 5418.0], [57.0, 5420.0], [57.1, 5422.0], [57.2, 5424.0], [57.3, 5429.0], [57.4, 5430.0], [57.5, 5432.0], [57.6, 5433.0], [57.7, 5436.0], [57.8, 5439.0], [57.9, 5439.0], [58.0, 5441.0], [58.1, 5444.0], [58.2, 5445.0], [58.3, 5448.0], [58.4, 5450.0], [58.5, 5453.0], [58.6, 5457.0], [58.7, 5462.0], [58.8, 5464.0], [58.9, 5468.0], [59.0, 5471.0], [59.1, 5472.0], [59.2, 5474.0], [59.3, 5479.0], [59.4, 5482.0], [59.5, 5485.0], [59.6, 5486.0], [59.7, 5488.0], [59.8, 5494.0], [59.9, 5497.0], [60.0, 5499.0], [60.1, 5502.0], [60.2, 5504.0], [60.3, 5505.0], [60.4, 5510.0], [60.5, 5512.0], [60.6, 5517.0], [60.7, 5519.0], [60.8, 5522.0], [60.9, 5525.0], [61.0, 5527.0], [61.1, 5529.0], [61.2, 5533.0], [61.3, 5536.0], [61.4, 5537.0], [61.5, 5539.0], [61.6, 5544.0], [61.7, 5547.0], [61.8, 5550.0], [61.9, 5554.0], [62.0, 5556.0], [62.1, 5557.0], [62.2, 5562.0], [62.3, 5567.0], [62.4, 5570.0], [62.5, 5574.0], [62.6, 5575.0], [62.7, 5576.0], [62.8, 5578.0], [62.9, 5582.0], [63.0, 5588.0], [63.1, 5594.0], [63.2, 5597.0], [63.3, 5607.0], [63.4, 5614.0], [63.5, 5618.0], [63.6, 5619.0], [63.7, 5625.0], [63.8, 5636.0], [63.9, 5641.0], [64.0, 5650.0], [64.1, 5658.0], [64.2, 5664.0], [64.3, 5670.0], [64.4, 5674.0], [64.5, 5678.0], [64.6, 5685.0], [64.7, 5689.0], [64.8, 5692.0], [64.9, 5695.0], [65.0, 5697.0], [65.1, 5701.0], [65.2, 5709.0], [65.3, 5717.0], [65.4, 5720.0], [65.5, 5722.0], [65.6, 5728.0], [65.7, 5735.0], [65.8, 5746.0], [65.9, 5750.0], [66.0, 5754.0], [66.1, 5758.0], [66.2, 5762.0], [66.3, 5769.0], [66.4, 5779.0], [66.5, 5783.0], [66.6, 5787.0], [66.7, 5790.0], [66.8, 5798.0], [66.9, 5803.0], [67.0, 5805.0], [67.1, 5812.0], [67.2, 5820.0], [67.3, 5825.0], [67.4, 5831.0], [67.5, 5835.0], [67.6, 5840.0], [67.7, 5847.0], [67.8, 5850.0], [67.9, 5856.0], [68.0, 5860.0], [68.1, 5864.0], [68.2, 5867.0], [68.3, 5871.0], [68.4, 5873.0], [68.5, 5884.0], [68.6, 5888.0], [68.7, 5890.0], [68.8, 5895.0], [68.9, 5899.0], [69.0, 5912.0], [69.1, 5913.0], [69.2, 5926.0], [69.3, 5929.0], [69.4, 5930.0], [69.5, 5937.0], [69.6, 5942.0], [69.7, 5946.0], [69.8, 5950.0], [69.9, 5962.0], [70.0, 5966.0], [70.1, 5969.0], [70.2, 5974.0], [70.3, 5983.0], [70.4, 5990.0], [70.5, 6000.0], [70.6, 6011.0], [70.7, 6015.0], [70.8, 6020.0], [70.9, 6028.0], [71.0, 6038.0], [71.1, 6053.0], [71.2, 6062.0], [71.3, 6069.0], [71.4, 6077.0], [71.5, 6085.0], [71.6, 6094.0], [71.7, 6122.0], [71.8, 6132.0], [71.9, 6146.0], [72.0, 6169.0], [72.1, 6177.0], [72.2, 6186.0], [72.3, 6191.0], [72.4, 6202.0], [72.5, 6210.0], [72.6, 6230.0], [72.7, 6241.0], [72.8, 6260.0], [72.9, 6267.0], [73.0, 6274.0], [73.1, 6285.0], [73.2, 6301.0], [73.3, 6311.0], [73.4, 6320.0], [73.5, 6325.0], [73.6, 6331.0], [73.7, 6349.0], [73.8, 6375.0], [73.9, 6387.0], [74.0, 6402.0], [74.1, 6410.0], [74.2, 6420.0], [74.3, 6432.0], [74.4, 6463.0], [74.5, 6472.0], [74.6, 6485.0], [74.7, 6506.0], [74.8, 6524.0], [74.9, 6539.0], [75.0, 6557.0], [75.1, 6565.0], [75.2, 6593.0], [75.3, 6604.0], [75.4, 6618.0], [75.5, 6638.0], [75.6, 6658.0], [75.7, 6673.0], [75.8, 6691.0], [75.9, 6712.0], [76.0, 6731.0], [76.1, 6752.0], [76.2, 6789.0], [76.3, 6804.0], [76.4, 6854.0], [76.5, 6903.0], [76.6, 6912.0], [76.7, 6940.0], [76.8, 6991.0], [76.9, 7024.0], [77.0, 7071.0], [77.1, 7106.0], [77.2, 7122.0], [77.3, 7163.0], [77.4, 7181.0], [77.5, 7197.0], [77.6, 7231.0], [77.7, 7259.0], [77.8, 7269.0], [77.9, 7279.0], [78.0, 7308.0], [78.1, 7312.0], [78.2, 7369.0], [78.3, 7418.0], [78.4, 7440.0], [78.5, 7470.0], [78.6, 7480.0], [78.7, 7507.0], [78.8, 7529.0], [78.9, 7548.0], [79.0, 7601.0], [79.1, 7641.0], [79.2, 7655.0], [79.3, 7683.0], [79.4, 7719.0], [79.5, 7747.0], [79.6, 7807.0], [79.7, 7836.0], [79.8, 7887.0], [79.9, 7912.0], [80.0, 7954.0], [80.1, 7963.0], [80.2, 7976.0], [80.3, 8023.0], [80.4, 8037.0], [80.5, 8087.0], [80.6, 8101.0], [80.7, 8128.0], [80.8, 8157.0], [80.9, 8192.0], [81.0, 8214.0], [81.1, 8247.0], [81.2, 8257.0], [81.3, 8279.0], [81.4, 8304.0], [81.5, 8356.0], [81.6, 8380.0], [81.7, 8413.0], [81.8, 8430.0], [81.9, 8467.0], [82.0, 8501.0], [82.1, 8527.0], [82.2, 8550.0], [82.3, 8591.0], [82.4, 8614.0], [82.5, 8651.0], [82.6, 8707.0], [82.7, 8741.0], [82.8, 8772.0], [82.9, 8787.0], [83.0, 8796.0], [83.1, 8814.0], [83.2, 8847.0], [83.3, 8893.0], [83.4, 8930.0], [83.5, 8962.0], [83.6, 8978.0], [83.7, 8999.0], [83.8, 9059.0], [83.9, 9099.0], [84.0, 9134.0], [84.1, 9154.0], [84.2, 9204.0], [84.3, 9229.0], [84.4, 9303.0], [84.5, 9328.0], [84.6, 9353.0], [84.7, 9379.0], [84.8, 9412.0], [84.9, 9454.0], [85.0, 9494.0], [85.1, 9523.0], [85.2, 9540.0], [85.3, 9568.0], [85.4, 9590.0], [85.5, 9607.0], [85.6, 9623.0], [85.7, 9632.0], [85.8, 9645.0], [85.9, 9659.0], [86.0, 9689.0], [86.1, 9713.0], [86.2, 9735.0], [86.3, 9748.0], [86.4, 9773.0], [86.5, 9796.0], [86.6, 9827.0], [86.7, 9842.0], [86.8, 9863.0], [86.9, 9906.0], [87.0, 9922.0], [87.1, 9955.0], [87.2, 9976.0], [87.3, 9982.0], [87.4, 10000.0], [87.5, 10024.0], [87.6, 10045.0], [87.7, 10087.0], [87.8, 10103.0], [87.9, 10124.0], [88.0, 10146.0], [88.1, 10154.0], [88.2, 10180.0], [88.3, 10195.0], [88.4, 10216.0], [88.5, 10243.0], [88.6, 10255.0], [88.7, 10277.0], [88.8, 10299.0], [88.9, 10329.0], [89.0, 10349.0], [89.1, 10372.0], [89.2, 10395.0], [89.3, 10419.0], [89.4, 10477.0], [89.5, 10501.0], [89.6, 10529.0], [89.7, 10554.0], [89.8, 10581.0], [89.9, 10613.0], [90.0, 10655.0], [90.1, 10681.0], [90.2, 10707.0], [90.3, 10799.0], [90.4, 10831.0], [90.5, 10868.0], [90.6, 10899.0], [90.7, 10938.0], [90.8, 10955.0], [90.9, 11038.0], [91.0, 11063.0], [91.1, 11094.0], [91.2, 11122.0], [91.3, 11137.0], [91.4, 11168.0], [91.5, 11197.0], [91.6, 11211.0], [91.7, 11289.0], [91.8, 11321.0], [91.9, 11354.0], [92.0, 11387.0], [92.1, 11408.0], [92.2, 11440.0], [92.3, 11464.0], [92.4, 11487.0], [92.5, 11491.0], [92.6, 11557.0], [92.7, 11576.0], [92.8, 11612.0], [92.9, 11665.0], [93.0, 11691.0], [93.1, 11710.0], [93.2, 11723.0], [93.3, 11832.0], [93.4, 11872.0], [93.5, 11920.0], [93.6, 11972.0], [93.7, 12045.0], [93.8, 12166.0], [93.9, 12194.0], [94.0, 12226.0], [94.1, 12359.0], [94.2, 12442.0], [94.3, 12471.0], [94.4, 12495.0], [94.5, 12637.0], [94.6, 12729.0], [94.7, 12819.0], [94.8, 12863.0], [94.9, 12903.0], [95.0, 12959.0], [95.1, 13026.0], [95.2, 13095.0], [95.3, 13264.0], [95.4, 13332.0], [95.5, 13478.0], [95.6, 13531.0], [95.7, 13709.0], [95.8, 13778.0], [95.9, 13861.0], [96.0, 13980.0], [96.1, 14049.0], [96.2, 14215.0], [96.3, 14328.0], [96.4, 14572.0], [96.5, 14618.0], [96.6, 14701.0], [96.7, 14739.0], [96.8, 14902.0], [96.9, 15033.0], [97.0, 15115.0], [97.1, 15210.0], [97.2, 15379.0], [97.3, 15526.0], [97.4, 15640.0], [97.5, 15756.0], [97.6, 16027.0], [97.7, 16105.0], [97.8, 16208.0], [97.9, 16366.0], [98.0, 16457.0], [98.1, 16562.0], [98.2, 16878.0], [98.3, 16965.0], [98.4, 17489.0], [98.5, 17755.0], [98.6, 18096.0], [98.7, 18541.0], [98.8, 18804.0], [98.9, 19200.0], [99.0, 20377.0], [99.1, 20465.0], [99.2, 20572.0], [99.3, 20873.0], [99.4, 22007.0], [99.5, 22982.0], [99.6, 23092.0], [99.7, 25877.0], [99.8, 27576.0], [99.9, 30018.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 611.0, "series": [{"data": [[200.0, 13.0], [300.0, 12.0], [400.0, 12.0], [500.0, 16.0], [600.0, 14.0], [700.0, 10.0], [800.0, 42.0], [900.0, 30.0], [1000.0, 25.0], [1100.0, 8.0], [1200.0, 8.0], [1300.0, 23.0], [1400.0, 27.0], [1500.0, 31.0], [1600.0, 27.0], [1700.0, 27.0], [1800.0, 35.0], [1900.0, 13.0], [2000.0, 12.0], [2100.0, 58.0], [2200.0, 35.0], [2300.0, 43.0], [2400.0, 69.0], [2500.0, 48.0], [2600.0, 28.0], [2700.0, 27.0], [2800.0, 22.0], [2900.0, 37.0], [3000.0, 71.0], [3100.0, 112.0], [3300.0, 152.0], [3200.0, 149.0], [3400.0, 162.0], [3500.0, 174.0], [3600.0, 195.0], [3700.0, 226.0], [3800.0, 223.0], [3900.0, 183.0], [4000.0, 107.0], [4300.0, 29.0], [4100.0, 104.0], [4200.0, 70.0], [4400.0, 38.0], [4600.0, 27.0], [4500.0, 24.0], [4700.0, 20.0], [4800.0, 22.0], [5100.0, 18.0], [5000.0, 8.0], [4900.0, 21.0], [5200.0, 15.0], [5300.0, 7.0], [5400.0, 13.0], [5500.0, 12.0], [5600.0, 12.0], [5700.0, 19.0], [5800.0, 13.0], [6000.0, 20.0], [5900.0, 13.0], [6100.0, 9.0], [6300.0, 4.0], [6200.0, 11.0], [6500.0, 9.0], [6600.0, 4.0], [6400.0, 12.0], [6800.0, 14.0], [6900.0, 6.0], [6700.0, 12.0], [7000.0, 11.0], [7100.0, 14.0], [7200.0, 13.0], [7400.0, 19.0], [7300.0, 8.0], [7500.0, 12.0], [7600.0, 13.0], [7900.0, 13.0], [7700.0, 11.0], [7800.0, 11.0], [8000.0, 15.0], [8100.0, 15.0], [8700.0, 18.0], [8600.0, 17.0], [8200.0, 20.0], [8300.0, 19.0], [8400.0, 15.0], [8500.0, 13.0], [9100.0, 16.0], [9200.0, 10.0], [8800.0, 22.0], [9000.0, 14.0], [8900.0, 14.0], [9400.0, 12.0], [9300.0, 9.0], [9700.0, 7.0], [9500.0, 19.0], [9600.0, 5.0], [9900.0, 13.0], [10100.0, 10.0], [10200.0, 8.0], [10000.0, 8.0], [9800.0, 8.0], [10300.0, 7.0], [10600.0, 5.0], [10400.0, 9.0], [10500.0, 4.0], [10700.0, 2.0], [11000.0, 5.0], [11100.0, 3.0], [10800.0, 6.0], [11200.0, 5.0], [10900.0, 5.0], [11600.0, 5.0], [11300.0, 5.0], [11700.0, 5.0], [11400.0, 6.0], [11500.0, 4.0], [11900.0, 3.0], [12000.0, 3.0], [12200.0, 5.0], [12100.0, 4.0], [11800.0, 2.0], [12300.0, 3.0], [12600.0, 4.0], [12500.0, 5.0], [12400.0, 3.0], [12700.0, 2.0], [13300.0, 2.0], [13100.0, 7.0], [13200.0, 3.0], [12800.0, 3.0], [12900.0, 4.0], [13800.0, 2.0], [13500.0, 6.0], [13700.0, 3.0], [13600.0, 1.0], [13400.0, 3.0], [14100.0, 4.0], [14300.0, 4.0], [13900.0, 4.0], [14800.0, 6.0], [14500.0, 4.0], [14400.0, 2.0], [14700.0, 2.0], [15300.0, 2.0], [15000.0, 2.0], [14900.0, 4.0], [15200.0, 2.0], [15500.0, 2.0], [15800.0, 1.0], [15400.0, 3.0], [15700.0, 2.0], [16000.0, 1.0], [16300.0, 1.0], [16200.0, 3.0], [15900.0, 1.0], [16800.0, 1.0], [16600.0, 2.0], [16900.0, 2.0], [16400.0, 1.0], [16500.0, 1.0], [17200.0, 1.0], [17300.0, 1.0], [17000.0, 1.0], [17700.0, 1.0], [17500.0, 3.0], [17800.0, 1.0], [18100.0, 1.0], [18800.0, 3.0], [18900.0, 5.0], [19300.0, 1.0], [19200.0, 1.0], [20300.0, 2.0], [19600.0, 2.0], [19800.0, 1.0], [19900.0, 1.0], [20500.0, 2.0], [20800.0, 1.0], [21500.0, 4.0], [21900.0, 1.0], [22500.0, 1.0], [24300.0, 1.0], [23700.0, 1.0], [25400.0, 1.0], [25800.0, 2.0], [26100.0, 1.0], [26700.0, 1.0], [27000.0, 1.0], [27700.0, 1.0], [28400.0, 1.0], [29100.0, 1.0], [29000.0, 1.0], [29400.0, 1.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 24.0], [600.0, 38.0], [700.0, 102.0], [800.0, 127.0], [900.0, 104.0], [1000.0, 109.0], [1100.0, 334.0], [1200.0, 279.0], [1300.0, 342.0], [1400.0, 611.0], [1500.0, 522.0], [100.0, 82.0], [1600.0, 346.0], [1700.0, 135.0], [1800.0, 77.0], [1900.0, 57.0], [2000.0, 31.0], [2100.0, 13.0], [2300.0, 18.0], [2200.0, 12.0], [2400.0, 20.0], [2500.0, 46.0], [2600.0, 36.0], [2800.0, 17.0], [2700.0, 19.0], [2900.0, 3.0], [3000.0, 7.0], [3100.0, 12.0], [200.0, 32.0], [3300.0, 6.0], [3200.0, 11.0], [3400.0, 4.0], [3500.0, 3.0], [3600.0, 2.0], [3700.0, 1.0], [3800.0, 1.0], [3900.0, 1.0], [4100.0, 2.0], [4300.0, 1.0], [4200.0, 1.0], [4500.0, 1.0], [4600.0, 1.0], [300.0, 73.0], [5700.0, 1.0], [400.0, 54.0], [500.0, 54.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[300.0, 9.0], [400.0, 9.0], [500.0, 19.0], [600.0, 8.0], [700.0, 6.0], [800.0, 8.0], [900.0, 16.0], [1000.0, 15.0], [1100.0, 2.0], [1200.0, 11.0], [1300.0, 20.0], [1400.0, 11.0], [1500.0, 7.0], [1600.0, 14.0], [1700.0, 18.0], [1800.0, 20.0], [1900.0, 26.0], [2000.0, 13.0], [2100.0, 19.0], [2300.0, 31.0], [2200.0, 33.0], [2400.0, 33.0], [2500.0, 33.0], [2600.0, 16.0], [2700.0, 6.0], [2800.0, 13.0], [2900.0, 16.0], [3000.0, 25.0], [3100.0, 32.0], [3200.0, 39.0], [3300.0, 29.0], [3400.0, 15.0], [3500.0, 13.0], [3700.0, 17.0], [3600.0, 16.0], [3800.0, 15.0], [3900.0, 18.0], [4000.0, 30.0], [4100.0, 30.0], [4200.0, 30.0], [4300.0, 59.0], [4500.0, 105.0], [4400.0, 73.0], [4600.0, 166.0], [4700.0, 158.0], [4800.0, 149.0], [5000.0, 100.0], [5100.0, 126.0], [4900.0, 125.0], [5200.0, 164.0], [5300.0, 147.0], [5500.0, 121.0], [5400.0, 153.0], [5600.0, 70.0], [5800.0, 77.0], [5700.0, 67.0], [5900.0, 60.0], [6100.0, 29.0], [6000.0, 43.0], [6200.0, 30.0], [6300.0, 28.0], [6500.0, 23.0], [6600.0, 24.0], [6400.0, 26.0], [6900.0, 15.0], [6700.0, 15.0], [6800.0, 7.0], [7100.0, 17.0], [7000.0, 8.0], [7200.0, 17.0], [7400.0, 15.0], [7300.0, 12.0], [7600.0, 14.0], [7500.0, 12.0], [7700.0, 8.0], [7900.0, 16.0], [7800.0, 9.0], [8100.0, 13.0], [8000.0, 13.0], [8400.0, 13.0], [8600.0, 10.0], [8300.0, 10.0], [8700.0, 18.0], [8500.0, 12.0], [8200.0, 17.0], [9200.0, 8.0], [9000.0, 8.0], [9100.0, 10.0], [8800.0, 11.0], [8900.0, 14.0], [9400.0, 9.0], [9600.0, 23.0], [9700.0, 18.0], [9300.0, 14.0], [9500.0, 16.0], [9900.0, 19.0], [10100.0, 22.0], [10200.0, 17.0], [10000.0, 15.0], [9800.0, 14.0], [10500.0, 14.0], [10300.0, 15.0], [10600.0, 12.0], [10400.0, 10.0], [10700.0, 5.0], [11000.0, 10.0], [10800.0, 12.0], [11200.0, 8.0], [10900.0, 9.0], [11100.0, 16.0], [11400.0, 16.0], [11300.0, 12.0], [11600.0, 11.0], [11700.0, 8.0], [11500.0, 10.0], [12200.0, 6.0], [11900.0, 8.0], [12100.0, 8.0], [11800.0, 7.0], [12000.0, 2.0], [12400.0, 9.0], [12700.0, 4.0], [12600.0, 2.0], [12500.0, 3.0], [12300.0, 3.0], [13300.0, 4.0], [12900.0, 7.0], [13100.0, 3.0], [12800.0, 9.0], [13000.0, 5.0], [13200.0, 2.0], [13400.0, 4.0], [13800.0, 5.0], [13600.0, 1.0], [13700.0, 5.0], [13500.0, 4.0], [14200.0, 2.0], [14300.0, 5.0], [14100.0, 3.0], [14000.0, 2.0], [13900.0, 4.0], [14700.0, 7.0], [14500.0, 2.0], [14600.0, 5.0], [14400.0, 1.0], [14800.0, 1.0], [15200.0, 3.0], [15100.0, 6.0], [15300.0, 2.0], [14900.0, 3.0], [15000.0, 2.0], [15400.0, 3.0], [15500.0, 3.0], [15700.0, 4.0], [15600.0, 1.0], [15800.0, 3.0], [16100.0, 3.0], [16200.0, 2.0], [16000.0, 4.0], [16300.0, 4.0], [17400.0, 2.0], [16400.0, 5.0], [17200.0, 1.0], [16800.0, 1.0], [17000.0, 1.0], [17800.0, 3.0], [18000.0, 1.0], [18400.0, 1.0], [19200.0, 2.0], [18600.0, 2.0], [19000.0, 1.0], [19400.0, 1.0], [18800.0, 1.0], [20400.0, 3.0], [21000.0, 1.0], [20800.0, 1.0], [22400.0, 1.0], [22000.0, 2.0], [21800.0, 1.0], [23000.0, 3.0], [25800.0, 1.0], [27200.0, 1.0], [30000.0, 1.0], [30600.0, 1.0], [16500.0, 4.0], [16900.0, 3.0], [16700.0, 1.0], [17500.0, 3.0], [18300.0, 1.0], [17700.0, 1.0], [18500.0, 2.0], [18900.0, 1.0], [19100.0, 1.0], [20300.0, 4.0], [20500.0, 2.0], [21300.0, 1.0], [20700.0, 3.0], [22300.0, 1.0], [23500.0, 1.0], [22900.0, 1.0], [24500.0, 1.0], [25300.0, 1.0], [26900.0, 1.0], [27500.0, 2.0], [28100.0, 1.0], [28500.0, 1.0], [29900.0, 1.0], [30700.0, 1.0], [31500.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 31500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 8570.0, "series": [{"data": [[0.0, 322.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2424.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 8570.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 3.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 247.36761778367506, "minX": 1.61054196E12, "maxY": 271.9992439992438, "series": [{"data": [[1.61054202E12, 247.36761778367506], [1.61054196E12, 271.9992439992438]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61054202E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 93.8, "minX": 1.0, "maxY": 17880.0, "series": [{"data": [[2.0, 2781.0], [3.0, 2793.0], [4.0, 2531.0], [5.0, 256.0], [6.0, 208.0], [7.0, 262.0], [8.0, 276.0], [9.0, 1082.0], [10.0, 1028.0], [11.0, 1054.0], [12.0, 613.0], [13.0, 1010.0], [14.0, 787.0], [15.0, 621.0], [17.0, 1128.0], [18.0, 1252.5], [19.0, 1548.0], [20.0, 1564.0], [21.0, 5633.0], [22.0, 679.3333333333333], [23.0, 314.5], [24.0, 1518.2], [25.0, 758.0], [26.0, 486.22222222222223], [27.0, 811.0], [28.0, 1718.0], [29.0, 1466.0], [30.0, 1424.0], [31.0, 1382.0], [33.0, 405.0], [32.0, 4442.0], [34.0, 709.5], [35.0, 264.0], [37.0, 920.0], [36.0, 1190.3333333333333], [38.0, 582.0], [39.0, 385.5], [41.0, 1299.0], [42.0, 828.9166666666667], [43.0, 585.75], [44.0, 727.0], [45.0, 700.875], [47.0, 809.0], [46.0, 959.0], [48.0, 625.0], [49.0, 802.0], [51.0, 1393.8], [50.0, 1496.0], [52.0, 818.5], [53.0, 840.5], [55.0, 986.0], [54.0, 954.0], [57.0, 1412.0], [56.0, 1955.0], [59.0, 1972.6666666666667], [58.0, 1023.0], [61.0, 1851.0], [60.0, 1985.0], [62.0, 693.5], [63.0, 1248.0], [64.0, 1358.8], [65.0, 1155.125], [66.0, 1222.0], [67.0, 1822.0], [68.0, 1320.0], [69.0, 1544.6666666666667], [70.0, 1790.4], [71.0, 1095.6], [72.0, 1317.0], [73.0, 865.6666666666666], [74.0, 917.8333333333334], [75.0, 1345.421052631579], [76.0, 901.8], [77.0, 933.0], [78.0, 1486.1666666666667], [79.0, 1705.0], [83.0, 2117.0], [82.0, 1927.7142857142858], [81.0, 1994.3333333333333], [80.0, 2132.0], [87.0, 1742.5], [86.0, 1854.0], [85.0, 1928.0], [89.0, 1491.7142857142858], [91.0, 2623.571428571429], [90.0, 1570.0], [88.0, 1531.5], [94.0, 1709.3333333333333], [95.0, 1746.25], [93.0, 1957.0], [92.0, 2026.0], [99.0, 1826.0], [97.0, 1444.0], [96.0, 1740.4285714285716], [103.0, 1706.5], [102.0, 1928.9], [101.0, 2257.0], [100.0, 2312.0], [104.0, 1215.2], [105.0, 1291.3333333333333], [107.0, 1879.5], [106.0, 2585.625], [111.0, 1764.6], [110.0, 1845.6666666666667], [109.0, 1729.0], [108.0, 2287.8333333333335], [113.0, 1496.0], [114.0, 1957.5], [115.0, 2275.0], [112.0, 1358.0], [118.0, 1557.0000000000002], [119.0, 10924.0], [117.0, 3172.75], [116.0, 2346.666666666667], [120.0, 1848.6666666666667], [121.0, 1790.0], [122.0, 3334.666666666667], [123.0, 4471.375], [124.0, 2214.5], [126.0, 1932.6], [127.0, 1778.8], [125.0, 2359.6666666666665], [128.0, 1929.8333333333333], [129.0, 2015.25], [130.0, 1864.5], [131.0, 2145.0], [132.0, 1847.5714285714287], [133.0, 1866.6470588235295], [134.0, 2017.0], [135.0, 3665.0], [138.0, 2399.714285714286], [139.0, 2319.666666666667], [140.0, 4546.5], [143.0, 1750.6666666666667], [142.0, 2493.0], [141.0, 2366.0], [137.0, 2459.0], [136.0, 2279.75], [146.0, 5095.25], [151.0, 2524.2], [150.0, 2515.3333333333335], [149.0, 2440.5], [147.0, 2512.0], [145.0, 2360.0], [144.0, 2529.0], [152.0, 2048.75], [153.0, 2014.3333333333333], [154.0, 2224.285714285714], [159.0, 3408.545454545454], [158.0, 2615.0], [157.0, 2675.5], [156.0, 5490.0], [155.0, 2496.6666666666665], [160.0, 5308.400000000001], [161.0, 1503.0], [162.0, 1658.3333333333335], [163.0, 2042.0], [164.0, 9995.666666666666], [165.0, 2366.6666666666665], [167.0, 3068.5], [166.0, 3058.5], [170.0, 3674.0], [175.0, 3116.0], [174.0, 3446.5], [173.0, 4415.333333333333], [172.0, 8313.0], [171.0, 2991.0], [169.0, 5166.0], [168.0, 7407.0], [178.0, 4514.142857142857], [183.0, 5199.333333333333], [182.0, 6466.0], [181.0, 3411.5], [180.0, 3390.5], [179.0, 6260.5], [177.0, 4423.0], [176.0, 3100.0], [185.0, 5636.0], [186.0, 1806.6], [189.0, 3564.25], [191.0, 4333.933333333333], [190.0, 3659.0], [188.0, 7668.6], [187.0, 5537.750000000001], [184.0, 8799.0], [199.0, 8990.0], [198.0, 7453.5], [197.0, 5963.4], [196.0, 4218.5], [195.0, 10131.0], [194.0, 4665.0], [193.0, 3665.0], [192.0, 3669.0], [200.0, 2208.0], [201.0, 2935.0], [202.0, 2537.5], [203.0, 4143.5], [204.0, 3270.3333333333335], [205.0, 4202.25], [206.0, 3036.181818181818], [207.0, 3228.5], [208.0, 3506.444444444445], [213.0, 5025.666666666667], [215.0, 5318.666666666667], [212.0, 3504.0], [211.0, 3536.0], [210.0, 6341.5], [209.0, 3441.0], [216.0, 4635.0], [217.0, 4086.75], [218.0, 3344.285714285714], [219.0, 2762.0], [220.0, 3008.5], [222.0, 3200.0], [223.0, 4147.0], [221.0, 5404.25], [226.0, 2890.0], [227.0, 5693.5], [229.0, 3089.222222222222], [230.0, 3809.75], [231.0, 5255.6], [228.0, 5877.0], [225.0, 4610.5], [224.0, 3487.0], [232.0, 3288.2307692307695], [233.0, 3789.1428571428573], [239.0, 3528.0], [238.0, 3162.0], [237.0, 3215.5], [236.0, 4390.0], [235.0, 3694.0], [234.0, 3168.5], [241.0, 2718.0], [244.0, 3213.3333333333335], [247.0, 5114.636363636363], [246.0, 7952.333333333334], [243.0, 4062.3333333333335], [242.0, 3509.0], [240.0, 3119.0], [248.0, 3399.5], [253.0, 3118.5], [255.0, 3405.0], [254.0, 4458.875000000001], [252.0, 3176.0], [251.0, 5266.285714285715], [250.0, 4623.0], [249.0, 3674.875], [271.0, 3838.5], [258.0, 5792.0], [257.0, 3616.2], [256.0, 3352.6666666666665], [263.0, 5617.6], [262.0, 3585.0], [261.0, 3587.0], [260.0, 4302.499999999999], [259.0, 4827.0], [264.0, 3917.625], [265.0, 7194.333333333333], [266.0, 3643.5], [267.0, 3656.5], [270.0, 6617.5], [269.0, 6024.5], [268.0, 16561.5], [274.0, 4718.8], [275.0, 4632.818181818182], [284.0, 3372.2727272727275], [285.0, 3673.6999999999994], [286.0, 4755.5], [287.0, 5909.2], [276.0, 5132.75], [277.0, 3808.0], [278.0, 4735.5], [279.0, 3527.8], [273.0, 6638.5], [272.0, 3850.375], [280.0, 2953.0], [281.0, 4008.0], [282.0, 5257.0], [283.0, 4773.8], [289.0, 3492.0], [288.0, 3806.75], [295.0, 3828.25], [294.0, 6885.666666666666], [291.0, 3180.4], [290.0, 3922.25], [292.0, 5394.0], [293.0, 3468.5], [296.0, 5337.7037037037035], [297.0, 6976.9375], [299.0, 7785.333333333334], [298.0, 9238.0], [300.0, 5475.411833855789], [1.0, 2777.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[258.87062566277814, 4749.808854718991]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[2.0, 580.0], [3.0, 476.0], [4.0, 548.0], [5.0, 101.0], [6.0, 144.0], [7.0, 252.0], [8.0, 813.0], [9.0, 865.0], [10.0, 742.0], [11.0, 865.0], [12.0, 1050.0], [13.0, 783.0], [14.0, 966.0], [15.0, 1066.0], [17.0, 708.5], [18.0, 599.5], [19.0, 376.0], [20.0, 514.0], [21.0, 756.0], [22.0, 224.33333333333331], [23.0, 118.75], [24.0, 328.0], [25.0, 867.0], [26.0, 272.44444444444446], [27.0, 822.0], [28.0, 489.0], [29.0, 536.0], [30.0, 486.0], [31.0, 509.0], [33.0, 128.0], [32.0, 841.0], [34.0, 379.0], [35.0, 128.66666666666666], [37.0, 523.0], [36.0, 542.3333333333334], [38.0, 279.0], [39.0, 119.5], [41.0, 368.8], [42.0, 283.16666666666663], [43.0, 146.5], [44.0, 263.8888888888889], [45.0, 241.875], [47.0, 399.83333333333337], [46.0, 699.0], [48.0, 436.0], [49.0, 729.5], [51.0, 925.4], [50.0, 994.0], [52.0, 662.0], [53.0, 637.0], [55.0, 1149.0], [54.0, 1160.0], [57.0, 883.5], [56.0, 418.0], [59.0, 582.0], [58.0, 1126.0], [61.0, 574.0], [60.0, 678.0], [62.0, 750.0], [63.0, 443.0], [64.0, 461.0], [65.0, 500.875], [66.0, 422.0], [67.0, 666.0], [68.0, 724.0], [69.0, 593.6666666666667], [70.0, 529.6], [71.0, 271.8], [72.0, 422.33333333333337], [73.0, 140.0], [74.0, 220.16666666666669], [75.0, 569.0526315789474], [76.0, 93.8], [77.0, 120.0], [78.0, 658.5], [79.0, 849.0], [83.0, 785.0], [82.0, 788.7142857142857], [81.0, 832.6666666666666], [80.0, 845.0], [87.0, 832.0], [86.0, 909.0], [85.0, 832.0], [89.0, 763.7142857142857], [91.0, 925.4285714285714], [90.0, 802.5], [88.0, 728.5], [94.0, 806.0], [95.0, 910.75], [93.0, 930.0], [92.0, 933.0], [99.0, 983.5], [97.0, 938.0], [96.0, 908.4285714285714], [103.0, 969.0], [102.0, 985.5], [101.0, 1037.0], [100.0, 948.0], [104.0, 707.6], [105.0, 667.3333333333334], [107.0, 969.0], [106.0, 996.75], [111.0, 858.6], [110.0, 930.0], [109.0, 1002.0], [108.0, 947.6666666666666], [113.0, 582.6666666666666], [114.0, 791.5], [115.0, 902.0], [112.0, 962.0], [118.0, 433.22222222222223], [119.0, 1520.0], [117.0, 1014.5], [116.0, 883.3333333333333], [120.0, 692.8333333333334], [121.0, 594.6], [122.0, 526.3333333333333], [123.0, 817.0], [124.0, 820.1666666666667], [126.0, 595.0], [127.0, 401.8], [125.0, 918.3333333333334], [128.0, 477.1666666666667], [129.0, 526.25], [130.0, 342.75], [131.0, 671.4], [132.0, 362.8571428571429], [133.0, 310.70588235294116], [134.0, 411.3333333333333], [135.0, 1006.0], [138.0, 1004.8571428571428], [139.0, 1404.5000000000002], [140.0, 1301.5], [143.0, 749.8333333333334], [142.0, 1358.0], [141.0, 1252.0], [137.0, 1144.0], [136.0, 1061.5], [146.0, 1211.5], [151.0, 1594.2], [150.0, 1582.6666666666665], [149.0, 1446.75], [147.0, 1468.0], [145.0, 1325.0], [144.0, 1449.0], [152.0, 1469.25], [153.0, 1442.6666666666667], [154.0, 1457.4285714285713], [159.0, 1523.7272727272727], [158.0, 1484.5], [157.0, 1520.75], [156.0, 1521.6666666666667], [155.0, 1554.0], [160.0, 1557.1999999999998], [161.0, 1196.2], [162.0, 1227.3333333333333], [163.0, 1153.5], [164.0, 1371.6666666666667], [165.0, 1275.0], [167.0, 1394.0], [166.0, 1348.5], [170.0, 1382.25], [175.0, 1614.2], [174.0, 1365.5], [173.0, 1593.3333333333333], [172.0, 1497.0], [171.0, 1410.6666666666667], [169.0, 1578.0], [168.0, 1593.0], [178.0, 1267.7142857142858], [183.0, 1671.3333333333333], [182.0, 1473.3333333333333], [181.0, 1301.0], [180.0, 1245.75], [179.0, 1464.5], [177.0, 1394.75], [176.0, 1411.0], [185.0, 1047.0], [186.0, 982.0], [189.0, 844.625], [191.0, 1002.0000000000001], [190.0, 1228.0], [188.0, 1460.6], [187.0, 1403.125], [184.0, 1477.0], [199.0, 2727.0], [198.0, 1925.0], [197.0, 1269.2], [196.0, 1274.75], [195.0, 1495.0], [194.0, 1159.0], [193.0, 1197.0], [192.0, 1191.0], [200.0, 467.0], [201.0, 751.125], [202.0, 670.75], [203.0, 842.5], [204.0, 618.625], [205.0, 1006.0], [206.0, 590.9090909090909], [207.0, 936.25], [208.0, 897.888888888889], [213.0, 1233.0], [215.0, 1258.6666666666667], [212.0, 1171.0], [211.0, 1181.0], [210.0, 1269.5], [209.0, 1159.0], [216.0, 1124.8], [217.0, 1166.5], [218.0, 1076.0], [219.0, 563.5], [220.0, 769.5], [222.0, 925.0], [223.0, 1357.6666666666667], [221.0, 1448.5], [226.0, 778.3333333333333], [227.0, 989.0], [229.0, 1000.3333333333334], [230.0, 1601.75], [231.0, 1520.4], [228.0, 1277.0], [225.0, 1273.25], [224.0, 1268.0], [232.0, 993.7692307692308], [233.0, 1250.7142857142856], [239.0, 1803.5], [238.0, 1489.0], [237.0, 1565.5], [236.0, 1488.0], [235.0, 1696.7], [234.0, 1648.5], [241.0, 1901.5], [244.0, 546.0], [247.0, 1549.6363636363637], [246.0, 1519.6666666666667], [243.0, 1959.7777777777776], [242.0, 1788.5], [240.0, 1561.5], [248.0, 1219.0], [253.0, 1185.5], [255.0, 1502.0], [254.0, 1483.6250000000002], [252.0, 1589.0], [251.0, 1626.142857142857], [250.0, 1642.6666666666667], [249.0, 2142.125], [271.0, 2104.5], [258.0, 1200.0], [257.0, 1515.4], [256.0, 1600.0], [263.0, 1353.2], [262.0, 1506.0], [261.0, 1640.0], [260.0, 1530.25], [259.0, 1308.5], [264.0, 1247.375], [265.0, 1306.0], [266.0, 2146.5], [267.0, 1449.5], [270.0, 1316.0], [269.0, 1481.0], [268.0, 1318.5], [274.0, 1741.2], [275.0, 1620.0], [284.0, 1490.2727272727273], [285.0, 1526.3], [286.0, 1539.4166666666667], [287.0, 1493.6], [276.0, 1484.75], [277.0, 1602.6666666666667], [278.0, 1281.0], [279.0, 1401.4], [273.0, 2093.0], [272.0, 1397.0], [280.0, 1461.3333333333333], [281.0, 1400.7500000000002], [282.0, 1377.2], [283.0, 1444.4], [289.0, 1340.0], [288.0, 1527.5], [295.0, 1505.0], [294.0, 1441.6666666666667], [291.0, 1473.4], [290.0, 1566.5], [292.0, 1509.1764705882354], [293.0, 1456.0], [296.0, 1477.5185185185187], [297.0, 1302.9375], [299.0, 1409.3333333333333], [298.0, 1533.5], [300.0, 1526.3934169278957], [1.0, 538.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[258.87062566277814, 1376.4896606574791]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 3361.0], [3.0, 3269.0], [4.0, 3079.0], [5.0, 357.0], [6.0, 352.0], [7.0, 515.0], [8.0, 1089.0], [9.0, 1947.0], [10.0, 1770.0], [11.0, 1919.0], [12.0, 1664.0], [13.0, 1793.0], [14.0, 1753.0], [15.0, 1687.0], [17.0, 1837.0], [18.0, 1852.0], [19.0, 1924.0], [20.0, 2078.0], [21.0, 6389.0], [22.0, 908.0], [23.0, 440.5], [24.0, 1848.0], [25.0, 1625.0], [26.0, 763.0], [27.0, 1633.0], [28.0, 2207.0], [29.0, 2002.0], [30.0, 1910.0], [31.0, 1891.0], [33.0, 534.0], [32.0, 5283.0], [34.0, 1089.0], [35.0, 393.3333333333333], [37.0, 1443.0], [36.0, 1732.6666666666667], [38.0, 861.0], [39.0, 507.0], [41.0, 1668.2], [42.0, 1112.4166666666665], [43.0, 732.25], [44.0, 991.0], [45.0, 943.25], [47.0, 1209.3333333333333], [46.0, 1658.0], [48.0, 1061.5], [49.0, 1531.5], [51.0, 2319.2], [50.0, 2490.0], [52.0, 1481.5], [53.0, 1478.0], [55.0, 2135.0], [54.0, 2114.0], [57.0, 2296.0], [56.0, 2373.0], [59.0, 2555.0], [58.0, 2149.0], [61.0, 2425.0], [60.0, 2663.0], [62.0, 1444.5], [63.0, 1691.5], [64.0, 1820.2], [65.0, 1656.75], [66.0, 1644.5], [67.0, 2488.0], [68.0, 2044.0], [69.0, 2138.5], [70.0, 2320.0], [71.0, 1367.8], [72.0, 1740.0], [73.0, 1006.0], [74.0, 1138.1666666666667], [75.0, 1914.8421052631577], [76.0, 995.8], [77.0, 1054.0], [78.0, 2144.916666666667], [79.0, 2554.0], [83.0, 2902.0], [82.0, 2716.428571428571], [81.0, 2827.0], [80.0, 2977.0], [87.0, 2575.0], [86.0, 2763.0], [85.0, 2760.0], [89.0, 2255.714285714286], [91.0, 3549.1428571428573], [90.0, 2372.5], [88.0, 2260.0], [94.0, 2516.3333333333335], [95.0, 2657.25], [93.0, 2887.0], [92.0, 2959.0], [99.0, 2809.5], [97.0, 2382.0], [96.0, 2649.1428571428573], [103.0, 2675.5], [102.0, 2914.4], [101.0, 3294.0], [100.0, 3260.0], [104.0, 1923.4], [105.0, 1959.3333333333335], [107.0, 2848.5], [106.0, 3582.375], [111.0, 2623.2], [110.0, 2775.6666666666665], [109.0, 2731.0], [108.0, 3235.6666666666665], [113.0, 2078.6666666666665], [114.0, 2749.0], [115.0, 3177.0], [112.0, 2320.0], [118.0, 1990.6666666666667], [119.0, 12444.0], [117.0, 4187.25], [116.0, 3230.0], [120.0, 2542.166666666667], [121.0, 2385.0], [122.0, 3861.0], [123.0, 5288.75], [124.0, 3034.666666666667], [126.0, 2528.2], [127.0, 2181.2], [125.0, 3278.0], [128.0, 2407.5], [129.0, 2541.75], [130.0, 2207.75], [131.0, 2816.6], [132.0, 2210.857142857143], [133.0, 2177.7058823529414], [134.0, 2429.0], [135.0, 4671.333333333333], [138.0, 3404.714285714286], [139.0, 3724.25], [140.0, 5848.5], [143.0, 2501.333333333333], [142.0, 3851.0], [141.0, 3618.0], [137.0, 3603.0], [136.0, 3341.25], [146.0, 6307.0], [151.0, 4118.4], [150.0, 4098.0], [149.0, 3887.25], [147.0, 3980.0], [145.0, 3685.0], [144.0, 3978.0], [152.0, 3518.25], [153.0, 3457.3333333333335], [154.0, 3681.8571428571427], [159.0, 4932.272727272727], [158.0, 4099.5], [157.0, 4196.25], [156.0, 7011.666666666667], [155.0, 4050.6666666666665], [160.0, 6865.9], [161.0, 2699.8], [162.0, 2886.0], [163.0, 3196.0], [164.0, 11367.333333333334], [165.0, 3642.3333333333335], [167.0, 4462.5], [166.0, 4407.0], [170.0, 5056.5], [175.0, 4730.2], [174.0, 4812.0], [173.0, 6009.0], [172.0, 9810.0], [171.0, 4401.666666666667], [169.0, 6744.5], [168.0, 9000.0], [178.0, 5782.571428571428], [183.0, 6870.666666666667], [182.0, 7939.333333333333], [181.0, 4712.5], [180.0, 4636.25], [179.0, 7725.0], [177.0, 5817.75], [176.0, 4511.0], [185.0, 6683.5], [186.0, 2789.0], [189.0, 4409.0], [191.0, 5336.266666666666], [190.0, 4887.0], [188.0, 9129.2], [187.0, 6941.0], [184.0, 10276.0], [199.0, 11717.0], [198.0, 9378.5], [197.0, 7232.8], [196.0, 5493.25], [195.0, 11626.0], [194.0, 5824.0], [193.0, 4862.0], [192.0, 4860.0], [200.0, 2675.0], [201.0, 3687.125], [202.0, 3208.25], [203.0, 4986.5], [204.0, 3889.3333333333335], [205.0, 5208.75], [206.0, 3627.7272727272725], [207.0, 4164.75], [208.0, 4404.777777777777], [213.0, 6259.0], [215.0, 6577.333333333333], [212.0, 4675.0], [211.0, 4717.0], [210.0, 7611.0], [209.0, 4600.0], [216.0, 5759.8], [217.0, 5253.25], [218.0, 4420.285714285714], [219.0, 3325.75], [220.0, 3778.0], [222.0, 4125.0], [223.0, 5505.0], [221.0, 6852.75], [226.0, 3668.6666666666665], [227.0, 6682.5], [229.0, 4089.8888888888887], [230.0, 5411.75], [231.0, 6776.4], [228.0, 7154.5], [225.0, 5883.75], [224.0, 4755.0], [232.0, 4282.2307692307695], [233.0, 5040.285714285715], [239.0, 5331.5], [238.0, 4651.0], [237.0, 4781.0], [236.0, 5878.0], [235.0, 5390.7], [234.0, 4817.5], [241.0, 4620.0], [244.0, 3759.6666666666665], [247.0, 6664.272727272728], [246.0, 9472.0], [243.0, 6022.111111111111], [242.0, 5297.5], [240.0, 4680.5], [248.0, 4618.5], [253.0, 4304.0], [255.0, 4907.0], [254.0, 5942.625], [252.0, 4765.0], [251.0, 6892.571428571428], [250.0, 6265.666666666667], [249.0, 5817.0], [271.0, 5943.0], [258.0, 6992.333333333333], [257.0, 5131.8], [256.0, 4952.666666666667], [263.0, 6971.0], [262.0, 5091.0], [261.0, 5227.0], [260.0, 5832.874999999999], [259.0, 6135.5], [264.0, 5165.25], [265.0, 8500.666666666666], [266.0, 5790.0], [267.0, 5106.0], [270.0, 7933.5], [269.0, 7505.5], [268.0, 17880.0], [274.0, 6460.2], [275.0, 6252.90909090909], [284.0, 4863.272727272726], [285.0, 5200.499999999999], [286.0, 6295.083333333332], [287.0, 7403.0], [276.0, 6617.75], [277.0, 5410.666666666667], [278.0, 6016.666666666667], [279.0, 4929.4], [273.0, 8731.5], [272.0, 5247.375], [280.0, 4414.666666666667], [281.0, 5409.0], [282.0, 6634.4], [283.0, 6218.333333333333], [289.0, 4832.666666666667], [288.0, 5334.75], [295.0, 5333.25], [294.0, 8327.333333333334], [291.0, 4654.0], [290.0, 5489.0], [292.0, 6903.2941176470595], [293.0, 4925.0], [296.0, 6815.370370370371], [297.0, 8280.125], [299.0, 9195.0], [298.0, 10771.5], [300.0, 6997.06262230919], [1.0, 3315.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[258.9033112582783, 6123.879999999999]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 300.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 13018.333333333334, "minX": 1.61054196E12, "maxY": 4823858.8, "series": [{"data": [[1.61054202E12, 4823858.8], [1.61054196E12, 3917417.7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61054202E12, 15145.933333333332], [1.61054196E12, 13018.333333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61054202E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1375.531446540883, "minX": 1.61054196E12, "maxY": 6124.28770413065, "series": [{"data": [[1.61054202E12, 4739.130643611907], [1.61054196E12, 4762.963905325441]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.61054202E12, 1377.4704935622333], [1.61054196E12, 1375.531446540883]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.61054202E12, 6124.28770413065], [1.61054196E12, 6123.378617838171]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61054202E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1363.4630832841094, "minX": 1.61054196E12, "maxY": 1664.7151777137337, "series": [{"data": [[1.61054202E12, 1664.7151777137337], [1.61054196E12, 1656.913017751481]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.61054202E12, 1377.4704935622333], [1.61054196E12, 1375.512578616351]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.61054202E12, 1385.0816522574403], [1.61054196E12, 1363.4630832841094]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61054202E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 673.8079399141631, "minX": 1.61054196E12, "maxY": 690.0134486071083, "series": [{"data": [[1.61054202E12, 690.0134486071083], [1.61054196E12, 680.0005917159768]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.61054202E12, 673.8079399141631], [1.61054196E12, 682.3642557651975]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.61054202E12, 678.341978866475], [1.61054196E12, 679.8487891317179]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61054202E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 39.0, "minX": 1.61054196E12, "maxY": 31583.0, "series": [{"data": [[1.61054202E12, 31583.0], [1.61054196E12, 25877.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61054202E12, 8736.400000000001], [1.61054196E12, 8324.2]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61054202E12, 18838.0], [1.61054196E12, 15753.22]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61054202E12, 10803.95], [1.61054196E12, 11085.800000000003]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61054202E12, 101.0], [1.61054196E12, 39.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61054202E12, 3494.5], [1.61054196E12, 3369.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61054202E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 549.0, "minX": 8.0, "maxY": 6806.0, "series": [{"data": [[8.0, 2936.0], [20.0, 4630.0], [34.0, 1148.0], [46.0, 1771.0], [53.0, 5552.0], [54.0, 4733.0], [58.0, 1556.0], [66.0, 1823.0], [71.0, 4802.0], [70.0, 5903.0], [79.0, 2461.0], [87.0, 1511.0], [89.0, 3523.0], [97.0, 3225.0], [101.0, 3604.0], [102.0, 1032.5], [107.0, 1020.5], [104.0, 3746.0], [105.0, 3859.0], [106.0, 4340.0], [110.0, 3969.5], [111.0, 3795.0], [113.0, 3959.0], [114.0, 4288.0], [112.0, 3395.5], [116.0, 4254.0], [117.0, 4025.0], [119.0, 3838.0], [120.0, 3718.5], [123.0, 3066.0], [127.0, 549.0], [126.0, 4163.5], [124.0, 3871.5], [129.0, 1585.0], [133.0, 3573.0], [132.0, 5269.0], [130.0, 4162.5], [135.0, 3916.0], [131.0, 3509.0], [134.0, 4006.0], [128.0, 3879.0], [136.0, 559.5], [137.0, 4628.0], [139.0, 3842.0], [150.0, 3883.0], [148.0, 3838.5], [144.0, 3575.5], [145.0, 3685.0], [147.0, 3663.0], [151.0, 3666.0], [146.0, 2311.0], [156.0, 4198.0], [157.0, 2480.0], [154.0, 1950.5], [161.0, 4578.5], [163.0, 2227.5], [164.0, 3920.5], [169.0, 4087.0], [172.0, 3347.0], [177.0, 2624.0], [183.0, 3929.0], [178.0, 4173.5], [184.0, 719.0], [189.0, 6806.0], [198.0, 3563.5], [205.0, 2124.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[20.0, 2866.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 205.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 8.0, "maxY": 3074.0, "series": [{"data": [[8.0, 659.0], [20.0, 3074.0], [34.0, 762.5], [46.0, 885.0], [53.0, 1578.0], [54.0, 1626.5], [58.0, 748.0], [66.0, 701.0], [71.0, 2578.0], [70.0, 1533.0], [79.0, 1408.0], [87.0, 821.0], [89.0, 1362.0], [97.0, 1343.0], [101.0, 1386.0], [102.0, 546.5], [107.0, 741.0], [104.0, 1576.5], [105.0, 1576.0], [106.0, 1357.0], [110.0, 1552.5], [111.0, 1523.0], [113.0, 1477.0], [114.0, 1654.0], [112.0, 1433.0], [116.0, 1665.5], [117.0, 1524.5], [119.0, 1423.0], [120.0, 1500.5], [123.0, 1238.0], [127.0, 176.0], [126.0, 1489.5], [124.0, 1519.5], [129.0, 389.0], [133.0, 1378.0], [132.0, 1620.0], [130.0, 1487.5], [135.0, 1585.0], [131.0, 1492.0], [134.0, 1576.5], [128.0, 1431.5], [136.0, 303.0], [137.0, 1434.0], [139.0, 1546.0], [150.0, 1660.5], [148.0, 1520.5], [144.0, 1363.5], [145.0, 1400.0], [147.0, 1505.0], [151.0, 1466.0], [146.0, 946.0], [156.0, 1547.0], [157.0, 1015.0], [154.0, 814.5], [161.0, 1486.5], [163.0, 968.0], [164.0, 1563.5], [169.0, 1389.0], [172.0, 1394.0], [177.0, 1246.0], [183.0, 1453.0], [178.0, 1459.0], [184.0, 468.0], [189.0, 1583.0], [198.0, 1280.0], [205.0, 769.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[20.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 205.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 90.46666666666667, "minX": 1.61054196E12, "maxY": 98.18333333333334, "series": [{"data": [[1.61054202E12, 90.46666666666667], [1.61054196E12, 98.18333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61054202E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.61054196E12, "maxY": 69.4, "series": [{"data": [[1.61054202E12, 69.4], [1.61054196E12, 56.333333333333336]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.61054202E12, 31.066666666666666], [1.61054196E12, 31.8]], "isOverall": false, "label": "301", "isController": false}, {"data": [[1.61054196E12, 0.05]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61054202E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.61054196E12, "maxY": 34.7, "series": [{"data": [[1.61054202E12, 34.7], [1.61054196E12, 28.166666666666668]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.61054196E12, 0.05]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.61054202E12, 31.066666666666666], [1.61054196E12, 31.8]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.61054202E12, 34.7], [1.61054196E12, 28.166666666666668]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61054202E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.61054196E12, "maxY": 100.46666666666667, "series": [{"data": [[1.61054202E12, 100.46666666666667], [1.61054196E12, 88.13333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.61054196E12, 0.05]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61054202E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

